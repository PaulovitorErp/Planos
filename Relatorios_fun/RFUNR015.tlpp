#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "TBICONN.CH"
#INCLUDE "RWMAKE.CH"

/*/{Protheus.doc} RFUNR015
Relatório de Inadimplência Funerária
@type function
@version 12.1.27
@author nata.queiroz
@since 13/07/2021
/*/
User Function RFUNR015()
	Local oReport := Nil
	Local cPerg := "RFUNR015"
	Local cTitle := "Visão Inadimplência"
	Local nTipoRelatorio := 1
	Local nQuebraPor := 1

	AjustaSX1(cPerg)
	If Pergunte(cPerg, .T., cTitle)

		nTipoRelatorio := MV_PAR09
		nQuebraPor := MV_PAR08

		If nTipoRelatorio == 1 .And. nQuebraPor == 1 // Sintetico Por Natureza
			oReport := ReportDefSintNat()
			oReport:PrintDialog()
		ElseIf nTipoRelatorio == 1 .And. nQuebraPor == 2 // Sintetico Por Plano
			oReport := ReportDefSintPlano()
			oReport:PrintDialog()
		ElseIf nTipoRelatorio == 2 .And. nQuebraPor == 1 // Analítico Por Natureza
			oReport := ReportDefAnalitNat()
			oReport:PrintDialog()
		ElseIf nTipoRelatorio == 2 .And. nQuebraPor == 2 // Analítico Por Plano
			oReport := ReportDefAnalitPlano()
			oReport:PrintDialog()
		EndIf
	EndIf

Return

/*/{Protheus.doc} ReportDefSintNat
Definição do relatório sintético por natureza
@type function
@version 12.1.27
@author nata.queiroz
@since 13/07/2021
@return object, oReport
/*/
Static Function ReportDefSintNat()
	Local oReport := Nil
	Local oSection1 := Nil
	Local dDataRefDe := MV_PAR01
	Local dDataRefAte := MV_PAR02
	Local cPeriodo := "(" + DTOC(dDataRefDe) + ' - ' + DTOC(dDataRefAte) + ")"
	Local cTitle := "Visão Inadimplência Por Natureza Sintético " + cPeriodo
	Local cHelp := "Relatório apresenta dados de inadimplência por natureza financeira de forma sintética."

	oReport	:= TReport():New("RFUNR015",cTitle,"RFUNR015",{|oReport| PrintRptSN(oReport, oSection1)},cHelp)
	oReport:SetLandscape()	// Orientação paisagem
	oReport:HideParamPage()	// Inibe impressão da pagina de parametros
	oReport:SetUseGC(.F.) // Desabilita o botão <Gestao Corporativa> do relatório

	oSection1 	:= TRSection():New(oReport,"Visão Inadimplência Por Natureza Sintético " + cPeriodo,{"TMPUF2"})
	oSection1:SetAutoSize(.T.)

	TRCell():New(oSection1, "COD_NATUREZA"	      , "TMPUF2", "Código Natureza"   ,	PesqPict("SED","ED_CODIGO"	), TamSX3("ED_CODIGO" )[1] )
	TRCell():New(oSection1, "DESC_NATUREZA"	      , "TMPUF2", "Descrição Natureza",	PesqPict("SED","ED_DESCRIC"	), TamSX3("ED_DESCRIC")[1] )
	TRCell():New(oSection1, "TOTAL_VENCTO"	      , "TMPUF2", "Total Vencto"      ,	PesqPict("SE1","E1_VALOR"	), TamSX3("E1_VALOR"  )[1] )
	TRCell():New(oSection1, "TOTAL_RECEBIDO"      , "TMPUF2", "Total Recebido"    ,	PesqPict("SE1","E1_VALOR"	), TamSX3("E1_VALOR"  )[1] )
	TRCell():New(oSection1, "TOTAL_INADIMPLENTE"  , "TMPUF2", "Total Inadimplente",	PesqPict("SE1","E1_VALOR"	), TamSX3("E1_VALOR"  )[1] )
	TRCell():New(oSection1, "TOTAL_RECUPERADO"	  , "TMPUF2", "Total Recuperado"  ,	PesqPict("SE1","E1_VALOR"	), TamSX3("E1_VALOR"  )[1] )
	TRCell():New(oSection1, "TOTAL_ANTECIPADO"	  , "TMPUF2", "Total Antecipado"  ,	PesqPict("SE1","E1_VALOR"	), TamSX3("E1_VALOR"  )[1] )
	TRCell():New(oSection1, "TOTAL_RECEBIDO_GERAL", "TMPUF2", "Total Recebimentos",	PesqPict("SE1","E1_VALOR"	), TamSX3("E1_VALOR"  )[1] )

	TRFunction():New(oSection1:Cell("TOTAL_VENCTO"),/* cID */,"SUM",/*oBreak*/,"Total Vencto",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("TOTAL_RECEBIDO"),/* cID */,"SUM",/*oBreak*/,"Total Recebido",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("TOTAL_INADIMPLENTE"),/* cID */,"SUM",/*oBreak*/,"Total Inadimplente",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("TOTAL_RECUPERADO"),/* cID */,"SUM",/*oBreak*/,"Total Recuperado",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("TOTAL_ANTECIPADO"),/* cID */,"SUM",/*oBreak*/,"Total Antecipado",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("TOTAL_RECEBIDO_GERAL"),/* cID */,"SUM",/*oBreak*/,"Total Recebimentos",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)

Return oReport

/*/{Protheus.doc} PrintRptSN
Impresão do relatório sintético por natureza
@type function
@version 12.1.27
@author nata.queiroz
@since 13/07/2021
@param oReport, object, oReport
@param oSection1, object, oSection1
/*/
Static Function PrintRptSN(oReport, oSection1)
	Local cQry := ""
	Local aSX2SED := FwSX2Util():GetSX2data("SED", {"X2_MODO", "X2_MODOUN", "X2_MODOEMP"})
	Local lSEDEx := (aSX2SED[1,2] == "E" .Or. aSX2SED[2,2] == "E" .Or. aSX2SED[3,2] == "E")

	// Parâmetros
	Local dDataRefDe := MV_PAR01
	Local dDataRefAte := MV_PAR02
	Local dDataAtivDe := MV_PAR03
	Local dDataAtivAte := MV_PAR04
	Local cNaturezaDe := MV_PAR05
	Local cNaturezaAte := MV_PAR06
	Local cPlanos := MV_PAR07

	oSection1:Init()

	cQry := "SELECT COD_NATUREZA, "
	cQry += "	DESC_NATUREZA, "
	cQry += "	TOTAL_VENCTO, "
	cQry += "	TOTAL_RECEBIDO, "
	cQry += "	(TOTAL_VENCTO - TOTAL_RECEBIDO) TOTAL_INADIMPLENTE, "
	cQry += "	TOTAL_RECUPERADO, "
	cQry += "	TOTAL_ANTECIPADO, "
	cQry += "	TOTAL_RECEBIDO_GERAL "
	cQry += "FROM ( "
	cQry += "SELECT SED.ED_CODIGO COD_NATUREZA, "
	cQry += "	SED.ED_DESCRIC DESC_NATUREZA, "
	cQry += "	SUM(CASE WHEN (SE1.E1_VENCORI BETWEEN '"+ DTOS(dDataRefDe) +"' AND '"+ DTOS(dDataRefAte) +"') AND SE1.E1_NUMLIQ = '' THEN (SE1.E1_VALOR + SE1.E1_ACRESC) ELSE 0 END) TOTAL_VENCTO, "
	cQry += "	SUM(CASE WHEN ((SE1.E1_VENCORI BETWEEN '"+ DTOS(dDataRefDe) +"' AND '"+ DTOS(dDataRefAte) +"') AND (SE1.E1_BAIXA BETWEEN '"+ DTOS(dDataRefDe) +"' AND '"+ DTOS(dDataRefAte) +"') AND SE1.E1_NUMLIQ = '') THEN SE5.E5_VALOR ELSE 0 END) TOTAL_RECEBIDO, "
	cQry += "	SUM(CASE WHEN ((SE1.E1_VENCORI < '"+ DTOS(dDataRefDe) +"' OR SE1.E1_NUMLIQ <> '') AND (SE1.E1_BAIXA BETWEEN '"+ DTOS(dDataRefDe) +"' AND '"+ DTOS(dDataRefAte) +"')) THEN SE5.E5_VALOR ELSE 0 END) TOTAL_RECUPERADO, "
	cQry += "	SUM(CASE WHEN ((SE1.E1_VENCORI > '"+ DTOS(dDataRefAte) +"' AND SE1.E1_NUMLIQ = '') AND (SE1.E1_BAIXA BETWEEN '"+ DTOS(dDataRefDe) +"' AND '"+ DTOS(dDataRefAte) +"')) THEN SE5.E5_VALOR ELSE 0 END) TOTAL_ANTECIPADO, "
	cQry += "	SUM(CASE WHEN (SE1.E1_BAIXA BETWEEN '"+ DTOS(dDataRefDe) +"' AND '"+ DTOS(dDataRefAte) +"') THEN SE5.E5_VALOR ELSE 0 END) TOTAL_RECEBIDO_GERAL "
	cQry += "FROM "+ RetSqlName("UF2") +" UF2 (NOLOCK) "
	cQry += "INNER JOIN "+ RetSqlName("SE1") +" SE1 (NOLOCK) "
	cQry += "    ON SE1.D_E_L_E_T_ <> '*' "
	cQry += "    AND SE1.E1_FILIAL = UF2.UF2_MSFIL "
	cQry += "    AND SE1.E1_XCTRFUN = UF2.UF2_CODIGO "
	cQry += "    AND SE1.E1_CLIENTE = UF2.UF2_CLIENT "
	cQry += "    AND SE1.E1_LOJA = UF2.UF2_LOJA "
	cQry += "LEFT JOIN "+ RetSqlName("SE5") +" SE5 (NOLOCK) "
	cQry += "    ON SE5.D_E_L_E_T_ <> '*' "
	cQry += "    AND SE5.E5_FILIAL = SE1.E1_FILIAL "
	cQry += "    AND SE5.E5_PREFIXO = SE1.E1_PREFIXO "
	cQry += "    AND SE5.E5_TIPO = SE1.E1_TIPO "
	cQry += "    AND SE5.E5_NUMERO = SE1.E1_NUM "
	cQry += "    AND SE5.E5_PARCELA = SE1.E1_PARCELA "
	cQry += "    AND SE5.E5_CLIFOR = SE1.E1_CLIENTE "
	cQry += "    AND SE5.E5_LOJA = SE1.E1_LOJA "
	cQry += "    AND SE5.E5_RECPAG = 'R' "
	cQry += "    AND SE5.E5_SITUACA <> 'C' "
	cQry += "    AND ( (SE5.E5_TIPODOC = 'VL' AND SE5.E5_MOTBX = 'NOR' AND SE5.E5_ORIGEM <> 'LOJXREC' ) OR (SE5.E5_TIPODOC = 'BA' AND SE5.E5_MOTBX <> 'LIQ') ) "
	cQry += "    AND SE5.E5_TIPODOC NOT IN ('MT','JR','ES','M2','J2','IB','AP','BL','C2','CB','CM','D2','DC','DV','NCC','SG','TC') "
	cQry += "LEFT JOIN  "+ RetSqlName("SED") +" SED (NOLOCK) "
	cQry += "	ON SED.D_E_L_E_T_ <> '*' "
	If lSEDEx
		cQry += "	AND SED.ED_FILIAL = SE1.E1_FILIAL "
	EndIf
	cQry += "	AND SED.ED_CODIGO = SE1.E1_NATUREZ "
	cQry += "WHERE UF2.D_E_L_E_T_ <> '*' "
	cQry += "	AND UF2.UF2_MSFIL = '"+ cFilAnt +"' "
	If !Empty(dDataAtivDe) .Or. !Empty(dDataAtivAte)
		cQry += "	AND UF2.UF2_DTATIV BETWEEN '"+ DTOS(dDataAtivDe) +"' AND '"+ DTOS(dDataAtivAte) +"'  " // Intervalo Data de Ativação de Contrato
	EndIf
	If !Empty(cPlanos)
		cQry += "	AND UF2.UF2_PLANO IN "+ FormatIn( AllTrim(cPlanos),";") +" " // Multiseleção Planos
	EndIf
	If !Empty(cNaturezaDe) .Or. !Empty(cNaturezaAte)
		cQry += "	AND SE1.E1_NATUREZ BETWEEN '"+ cNaturezaDe +"' AND '"+ cNaturezaAte +"'  " // Intervalo de Natureza
	EndIf
	cQry += "GROUP BY SED.ED_CODIGO, SED.ED_DESCRIC) AS SINTETICO_POR_NATUREZA  "

	cQry := ChangeQuery(cQry)

	If Select("TMPUF2") > 0
		TMPUF2->(DbCloseArea())
	EndIf

	TcQuery cQry New Alias "TMPUF2"

	oReport:SetMeter(TMPUF2->(LastRec()))

	While !oReport:Cancel() .And. TMPUF2->(!EOF())

		oReport:IncMeter()

		If oReport:Cancel()
			Exit
		EndIf

		oSection1:Cell("COD_NATUREZA"):SetValue(TMPUF2->COD_NATUREZA)
		oSection1:Cell("DESC_NATUREZA"):SetValue(TMPUF2->DESC_NATUREZA)
		oSection1:Cell("TOTAL_VENCTO"):SetValue(TMPUF2->TOTAL_VENCTO)
		oSection1:Cell("TOTAL_RECEBIDO"):SetValue(TMPUF2->TOTAL_RECEBIDO)
		oSection1:Cell("TOTAL_INADIMPLENTE"):SetValue(TMPUF2->TOTAL_INADIMPLENTE)
		oSection1:Cell("TOTAL_RECUPERADO"):SetValue(TMPUF2->TOTAL_RECUPERADO)
		oSection1:Cell("TOTAL_ANTECIPADO"):SetValue(TMPUF2->TOTAL_ANTECIPADO)
		oSection1:Cell("TOTAL_RECEBIDO_GERAL"):SetValue(TMPUF2->TOTAL_RECEBIDO_GERAL)

		oSection1:PrintLine()
		oReport:SkipLine()

		TMPUF2->(dbSkip())
	EndDo

	oSection1:Finish()

	TMPUF2->(dbCloseArea())

Return

/*/{Protheus.doc} ReportDefSintPlano
Definição do relatório sintético por plano
@type function
@version 12.1.27
@author nata.queiroz
@since 13/07/2021
@return object, oReport
/*/
Static Function ReportDefSintPlano()
	Local oReport := Nil
	Local oSection1 := Nil
    Local dDataRefDe := MV_PAR01
	Local dDataRefAte := MV_PAR02
	Local cPeriodo := "(" + DTOC(dDataRefDe) + ' - ' + DTOC(dDataRefAte) + ")"
	Local cTitle := "Visão Inadimplência Por Plano Sintético " + cPeriodo
	Local cHelp := "Relatório apresenta dados de inadimplência por plano de forma sintética."

	oReport	:= TReport():New("RFUNR015",cTitle,"RFUNR015",{|oReport| PrintRptSP(oReport, oSection1)},cHelp)
	oReport:SetLandscape()	// Orientação paisagem
	oReport:HideParamPage()	// Inibe impressão da pagina de parametros
	oReport:SetUseGC(.F.) // Desabilita o botão <Gestao Corporativa> do relatório

	oSection1 	:= TRSection():New(oReport,"Visão Inadimplência Por Plano Sintético " + cPeriodo,{"TMPUF2"})
	oSection1:SetAutoSize(.T.)

	TRCell():New(oSection1, "COD_PLANO"	          , "TMPUF2", "Cod Plano"         ,	PesqPict("UF0","UF0_CODIGO"	), TamSX3("UF0_CODIGO" )[1])
	TRCell():New(oSection1, "DESC_PLANO"          , "TMPUF2", "Desc Plano"        ,	PesqPict("UF0","UF0_DESCRI"	), TamSX3("UF0_DESCRI")[1] )
	TRCell():New(oSection1, "TOTAL_VENCTO"	      , "TMPUF2", "Total Vencto"      ,	PesqPict("SE1","E1_VALOR"	), TamSX3("E1_VALOR"  )[1] )
	TRCell():New(oSection1, "TOTAL_RECEBIDO"      , "TMPUF2", "Total Recebido"    ,	PesqPict("SE1","E1_VALOR"	), TamSX3("E1_VALOR"  )[1] )
	TRCell():New(oSection1, "TOTAL_INADIMPLENTE"  , "TMPUF2", "Total Inadimplente",	PesqPict("SE1","E1_VALOR"	), TamSX3("E1_VALOR"  )[1] )
	TRCell():New(oSection1, "TOTAL_RECUPERADO"	  , "TMPUF2", "Total Recuperado"  ,	PesqPict("SE1","E1_VALOR"	), TamSX3("E1_VALOR"  )[1] )
	TRCell():New(oSection1, "TOTAL_ANTECIPADO"	  , "TMPUF2", "Total Antecipado"  ,	PesqPict("SE1","E1_VALOR"	), TamSX3("E1_VALOR"  )[1] )
	TRCell():New(oSection1, "TOTAL_RECEBIDO_GERAL", "TMPUF2", "Total Recebimentos",	PesqPict("SE1","E1_VALOR"	), TamSX3("E1_VALOR"  )[1] )

	TRFunction():New(oSection1:Cell("TOTAL_VENCTO"),/* cID */,"SUM",/*oBreak*/,"Total Vencto",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("TOTAL_RECEBIDO"),/* cID */,"SUM",/*oBreak*/,"Total Recebido",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("TOTAL_INADIMPLENTE"),/* cID */,"SUM",/*oBreak*/,"Total Inadimplente",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("TOTAL_RECUPERADO"),/* cID */,"SUM",/*oBreak*/,"Total Recuperado",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("TOTAL_ANTECIPADO"),/* cID */,"SUM",/*oBreak*/,"Total Antecipado",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("TOTAL_RECEBIDO_GERAL"),/* cID */,"SUM",/*oBreak*/,"Total Recebimentos",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)

Return oReport

/*/{Protheus.doc} PrintRptSP
Impresão do relatório sintético por plano
@type function
@version 12.1.27
@author nata.queiroz
@since 13/07/2021
@param oReport, object, oReport
@param oSection1, object, oSection1
/*/
Static Function PrintRptSP(oReport, oSection1)
	Local cQry := ""

	// Parâmetros
	Local dDataRefDe := MV_PAR01
	Local dDataRefAte := MV_PAR02
	Local dDataAtivDe := MV_PAR03
	Local dDataAtivAte := MV_PAR04
	Local cNaturezaDe := MV_PAR05
	Local cNaturezaAte := MV_PAR06
	Local cPlanos := MV_PAR07

	oSection1:Init()

	cQry := "SELECT COD_PLANO, "
	cQry += "	DESC_PLANO, "
	cQry += "	TOTAL_VENCTO, "
	cQry += "	TOTAL_RECEBIDO, "
	cQry += "	(TOTAL_VENCTO - TOTAL_RECEBIDO) TOTAL_INADIMPLENTE, "
	cQry += "	TOTAL_RECUPERADO, "
	cQry += "	TOTAL_ANTECIPADO, "
	cQry += "	TOTAL_RECEBIDO_GERAL "
	cQry += "FROM ( "
	cQry += "SELECT UF0.UF0_CODIGO COD_PLANO, "
	cQry += "	UF0.UF0_DESCRI DESC_PLANO, "
	cQry += "	SUM(CASE WHEN (SE1.E1_VENCORI BETWEEN '"+ DTOS(dDataRefDe) +"' AND '"+ DTOS(dDataRefAte) +"') AND SE1.E1_NUMLIQ = '' THEN (SE1.E1_VALOR + SE1.E1_ACRESC) ELSE 0 END) TOTAL_VENCTO, "
	cQry += "	SUM(CASE WHEN ((SE1.E1_VENCORI BETWEEN '"+ DTOS(dDataRefDe) +"' AND '"+ DTOS(dDataRefAte) +"') AND (SE1.E1_BAIXA BETWEEN '"+ DTOS(dDataRefDe) +"' AND '"+ DTOS(dDataRefAte) +"') AND SE1.E1_NUMLIQ = '') THEN SE5.E5_VALOR ELSE 0 END) TOTAL_RECEBIDO, "
	cQry += "	SUM(CASE WHEN ((SE1.E1_VENCORI < '"+ DTOS(dDataRefDe) +"' OR SE1.E1_NUMLIQ <> '') AND (SE1.E1_BAIXA BETWEEN '"+ DTOS(dDataRefDe) +"' AND '"+ DTOS(dDataRefAte) +"')) THEN SE5.E5_VALOR ELSE 0 END) TOTAL_RECUPERADO, "
	cQry += "	SUM(CASE WHEN ((SE1.E1_VENCORI > '"+ DTOS(dDataRefAte) +"' AND SE1.E1_NUMLIQ = '') AND (SE1.E1_BAIXA BETWEEN '"+ DTOS(dDataRefDe) +"' AND '"+ DTOS(dDataRefAte) +"')) THEN SE5.E5_VALOR ELSE 0 END) TOTAL_ANTECIPADO, "
	cQry += "	SUM(CASE WHEN (SE1.E1_BAIXA BETWEEN '"+ DTOS(dDataRefDe) +"' AND '"+ DTOS(dDataRefAte) +"') THEN SE5.E5_VALOR ELSE 0 END) TOTAL_RECEBIDO_GERAL "
	cQry += "FROM "+ RetSqlName("UF2") +" UF2 (NOLOCK) "
	cQry += "INNER JOIN "+ RetSqlName("SE1") +" SE1 (NOLOCK) "
	cQry += "    ON SE1.D_E_L_E_T_ <> '*' "
	cQry += "    AND SE1.E1_FILIAL = UF2.UF2_MSFIL "
	cQry += "    AND SE1.E1_XCTRFUN = UF2.UF2_CODIGO "
	cQry += "    AND SE1.E1_CLIENTE = UF2.UF2_CLIENT "
	cQry += "    AND SE1.E1_LOJA = UF2.UF2_LOJA "
	cQry += "LEFT JOIN "+ RetSqlName("SE5") +" SE5 (NOLOCK) "
	cQry += "    ON SE5.D_E_L_E_T_ <> '*' "
	cQry += "    AND SE5.E5_FILIAL = SE1.E1_FILIAL "
	cQry += "    AND SE5.E5_PREFIXO = SE1.E1_PREFIXO "
	cQry += "    AND SE5.E5_TIPO = SE1.E1_TIPO "
	cQry += "    AND SE5.E5_NUMERO = SE1.E1_NUM "
	cQry += "    AND SE5.E5_PARCELA = SE1.E1_PARCELA "
	cQry += "    AND SE5.E5_CLIFOR = SE1.E1_CLIENTE "
	cQry += "    AND SE5.E5_LOJA = SE1.E1_LOJA "
	cQry += "    AND SE5.E5_RECPAG = 'R' "
	cQry += "    AND SE5.E5_SITUACA <> 'C' "
	cQry += "    AND ( (SE5.E5_TIPODOC = 'VL' AND SE5.E5_MOTBX = 'NOR' AND SE5.E5_ORIGEM <> 'LOJXREC' ) OR (SE5.E5_TIPODOC = 'BA' AND SE5.E5_MOTBX <> 'LIQ') ) "
	cQry += "    AND SE5.E5_TIPODOC NOT IN ('MT','JR','ES','M2','J2','IB','AP','BL','C2','CB','CM','D2','DC','DV','NCC','SG','TC') "
	cQry += "LEFT JOIN "+ RetSqlName("UF0") +" UF0 (NOLOCK) "
	cQry += "    ON UF0.D_E_L_E_T_ <> '*' "
	cQry += "    AND UF0.UF0_FILIAL = UF2.UF2_FILIAL "
	cQry += "    AND UF0.UF0_CODIGO = UF2.UF2_PLANO "
	cQry += "WHERE UF2.D_E_L_E_T_ <> '*' "
	cQry += "	AND UF2.UF2_MSFIL = '"+ cFilAnt +"' "
	If !Empty(dDataAtivDe) .Or. !Empty(dDataAtivAte)
		cQry += "	AND UF2.UF2_DTATIV BETWEEN '"+ DTOS(dDataAtivDe) +"' AND '"+ DTOS(dDataAtivAte) +"'  " // Intervalo Data de Ativação de Contrato
	EndIf
	If !Empty(cPlanos)
		cQry += "	AND UF2.UF2_PLANO IN "+ FormatIn( AllTrim(cPlanos),";") +" " // Multiseleção Planos
	EndIf
	If !Empty(cNaturezaDe) .Or. !Empty(cNaturezaAte)
		cQry += "	AND SE1.E1_NATUREZ BETWEEN '"+ cNaturezaDe +"' AND '"+ cNaturezaAte +"'  " // Intervalo de Natureza
	EndIf
	cQry += "GROUP BY UF0.UF0_CODIGO, UF0.UF0_DESCRI) AS SINTETICO_POR_PLANO "

	cQry := ChangeQuery(cQry)

	If Select("TMPUF2") > 0
		TMPUF2->(DbCloseArea())
	EndIf

	TcQuery cQry New Alias "TMPUF2"

	oReport:SetMeter(TMPUF2->(LastRec()))

	While !oReport:Cancel() .And. TMPUF2->(!EOF())

		oReport:IncMeter()

		If oReport:Cancel()
			Exit
		EndIf

		oSection1:Cell("COD_PLANO"):SetValue(TMPUF2->COD_PLANO)
		oSection1:Cell("DESC_PLANO"):SetValue(TMPUF2->DESC_PLANO)
		oSection1:Cell("TOTAL_VENCTO"):SetValue(TMPUF2->TOTAL_VENCTO)
		oSection1:Cell("TOTAL_RECEBIDO"):SetValue(TMPUF2->TOTAL_RECEBIDO)
		oSection1:Cell("TOTAL_INADIMPLENTE"):SetValue(TMPUF2->TOTAL_INADIMPLENTE)
		oSection1:Cell("TOTAL_RECUPERADO"):SetValue(TMPUF2->TOTAL_RECUPERADO)
		oSection1:Cell("TOTAL_ANTECIPADO"):SetValue(TMPUF2->TOTAL_ANTECIPADO)
		oSection1:Cell("TOTAL_RECEBIDO_GERAL"):SetValue(TMPUF2->TOTAL_RECEBIDO_GERAL)

		oSection1:PrintLine()
		oReport:SkipLine()

		TMPUF2->(dbSkip())
	EndDo

	oSection1:Finish()

	TMPUF2->(dbCloseArea())

Return

/*/{Protheus.doc} ReportDefAnalitNat
Definição do relatório analítico por natureza
@type function
@version 12.1.27
@author nata.queiroz
@since 13/07/2021
@return object, oReport
/*/
Static Function ReportDefAnalitNat()
	Local oReport := Nil
	Local oSection1 := Nil
	Local oBreak1 := Nil
	Local cReferencia := "(" + DTOC(dDatabase) + ")"
	Local cTitle := "Visão Inadimplência Por Natureza Analítico " + cReferencia
	Local cHelp := "Relatório apresenta dados de inadimplência por natureza financeira de forma analítica."

	oReport	:= TReport():New("RFUNR015",cTitle,"RFUNR015",{|oReport| PrintRptAN(oReport, oSection1)},cHelp)
	oReport:SetLandscape()	// Orientação paisagem
	oReport:HideParamPage()	// Inibe impressão da pagina de parametros
	oReport:SetUseGC(.F.) // Desabilita o botão <Gestao Corporativa> do relatório

	oSection1 	:= TRSection():New(oReport,"Visão Inadimplência Por Natureza Analítico " + cReferencia,{"TMPUF2"})
	oSection1:SetAutoSize(.T.)

	TRCell():New(oSection1, "CONTRATO"	          , "TMPUF2", "Contrato"            , PesqPict("UF2","UF2_CODIGO"), TamSX3("UF2_CODIGO")[1]   )
	TRCell():New(oSection1, "COD_CLIENTE"	      , "TMPUF2", "Cod Cliente"         , PesqPict("SA1","A1_COD")    , TamSX3("A1_COD")[1]       )
	TRCell():New(oSection1, "NOME_CLIENTE"	      , "TMPUF2", "Nome Cliente"        , PesqPict("SA1","A1_NOME")   , TamSX3("A1_NOME")[1]-5    )
	TRCell():New(oSection1, "DATA_ATIVACAO"       , "TMPUF2", "Data Ativação"       , PesqPict("UF2","UF2_DTATIV"), TamSX3("UF2_DTATIV")[1]   )
	TRCell():New(oSection1, "COD_NATUREZA"        , "TMPUF2", "Cod Natureza"        , PesqPict("SED","ED_CODIGO" ), TamSX3("ED_CODIGO" )[1]   )
	TRCell():New(oSection1, "DESC_NATUREZA"	      , "TMPUF2", "Descrição Natureza"  , PesqPict("SED","ED_DESCRIC"), TamSX3("ED_DESCRIC")[1]   )
	TRCell():New(oSection1, "TELEFONE"	          , "TMPUF2", "Telefone"            , PesqPict("SA1","A1_TEL"   ) , TamSX3("A1_TEL"  )[1]+3   )
	TRCell():New(oSection1, "VALOR_PAGO"          , "TMPUF2", "Valor Pago"          , PesqPict("SE1","E1_VALOR"  ), TamSX3("E1_VALOR"  )[1]   )
	TRCell():New(oSection1, "QTD_PARCELAS_PAGAS"  , "TMPUF2", "Qtd Parc Pagas"      , "@E 999999999999"           , TamSX3("E1_VALOR"  )[1]   )
	TRCell():New(oSection1, "VALOR_ABERTO"        , "TMPUF2", "Valor Aberto"        , PesqPict("SE1","E1_VALOR"  ), TamSX3("E1_VALOR"  )[1]   )
	TRCell():New(oSection1, "QTD_PARCELAS_ABERTAS", "TMPUF2", "Qtd Parc Abertas"    , "@E 999999999999"           , TamSX3("E1_VALOR"  )[1]   )
	TRCell():New(oSection1, "STATUS"              , "TMPUF2", "Status"              , PesqPict("UF2","UF2_STATUS"), TamSX3("UF2_STATUS")[1]+5 )
	TRCell():New(oSection1, "DIAS_VENCIDOS"       , "TMPUF2", "Dias Vencidos"       , "@E 999999999999"           , TamSX3("E1_VALOR"  )[1]   )
	TRCell():New(oSection1, "STATUS_SERVICO"      , "TMPUF2", "Stts Serviço"        , PesqPict("UF2","UF2_STATUS"), TamSX3("UF2_STATUS")[1]   )
	TRCell():New(oSection1, "SALDO_QUITACAO"      , "TMPUF2", "Saldo Quitação"      , PesqPict("SE1","E1_VALOR"  ), TamSX3("E1_VALOR"  )[1]   )

	oBreak1 := TRBreak():New(oSection1,{|| oSection1:Cell('COD_NATUREZA'):uPrint },'Sub-Total',.F.)

	TRFunction():New(oSection1:Cell("VALOR_PAGO"),/* cID */,"SUM",oBreak1,"Total Valores Pagos",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("QTD_PARCELAS_PAGAS"),/* cID */,"SUM",oBreak1,"Total Parcelas Pagas",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("VALOR_ABERTO"),/* cID */,"SUM",oBreak1,"Total Valores Abertos",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("QTD_PARCELAS_ABERTAS"),/* cID */,"SUM",oBreak1,"Total Parcelas Abertas",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("SALDO_QUITACAO"),/* cID */,"SUM",oBreak1,"Total Saldo Quitação",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)

Return oReport

/*/{Protheus.doc} PrintRptAN
Impresão do relatório analítico por natureza
@type function
@version 12.1.27
@author nata.queiroz
@since 13/07/2021
@param oReport, object, oReport
@param oSection1, object, oSection1
/*/
Static Function PrintRptAN(oReport, oSection1)
	Local cQry := ""
	Local aSX2SED := FwSX2Util():GetSX2data("SED", {"X2_MODO", "X2_MODOUN", "X2_MODOEMP"})
	Local lSEDEx := (aSX2SED[1,2] == "E" .Or. aSX2SED[2,2] == "E" .Or. aSX2SED[3,2] == "E")

	// Parâmetros
	Local dDataAtivDe := MV_PAR03
	Local dDataAtivAte := MV_PAR04
	Local cNaturezaDe := MV_PAR05
	Local cNaturezaAte := MV_PAR06
	Local cPlanos := MV_PAR07

	oSection1:Init()

	cQry := "SELECT UF2.UF2_CODIGO CONTRATO, "
	cQry += "   SA1.A1_COD COD_CLIENTE, "
	cQry += "   SA1.A1_NOME NOME_CLIENTE, "
	cQry += "   UF2.UF2_DTATIV DATA_ATIVACAO, "
	cQry += "   SED.ED_CODIGO COD_NATUREZA, "
	cQry += "   SED.ED_DESCRIC DESC_NATUREZA, "
	cQry += "   (SA1.A1_DDD + SA1.A1_TEL) TELEFONE, "
	cQry += "   UF2.UF2_STATUS STATUS, "
	cQry += "	SUM(CASE WHEN SE1.E1_BAIXA <> '' THEN SE5.E5_VALOR ELSE 0 END) VALOR_PAGO, "
	cQry += "	SUM(CASE WHEN SE1.E1_BAIXA <> '' THEN 1 ELSE 0 END) QTD_PARCELAS_PAGAS, "
	cQry += "	SUM(CASE WHEN (SE1.E1_BAIXA = '' AND SE1.E1_VENCORI < '"+ DTOS(dDatabase) +"') THEN SE1.E1_SALDO ELSE 0 END) VALOR_ABERTO, "
	cQry += "	SUM(CASE WHEN (SE1.E1_BAIXA = '' AND SE1.E1_VENCORI < '"+ DTOS(dDatabase) +"') THEN 1 ELSE 0 END) QTD_PARCELAS_ABERTAS, "
	cQry += "	DATEDIFF(DAY, CAST(MIN(CASE WHEN (SE1.E1_BAIXA = '' AND SE1.E1_VENCORI < '"+ DTOS(dDatabase) +"') THEN SE1.E1_VENCORI ELSE NULL END) AS DATE), CAST('"+ DTOS(dDatabase) +"' AS DATE)) DIAS_VENCIDOS, "
	cQry += "	CASE WHEN COUNT(FIRST_UJ0.CONTRATO) > 0 THEN 'SIM' ELSE 'NAO' END STATUS_SERVICO, "
	cQry += "	SUM(SE1.E1_SALDO) SALDO_QUITACAO "
	cQry += "FROM "+ RetSqlName("UF2") +" UF2 (NOLOCK) "
	cQry += "INNER JOIN "+ RetSqlName("SE1") +" SE1 (NOLOCK) "
	cQry += "    ON SE1.D_E_L_E_T_ <> '*' "
	cQry += "    AND SE1.E1_FILIAL = UF2.UF2_MSFIL "
	cQry += "    AND SE1.E1_XCTRFUN = UF2.UF2_CODIGO "
	cQry += "    AND SE1.E1_CLIENTE = UF2.UF2_CLIENT "
	cQry += "    AND SE1.E1_LOJA = UF2.UF2_LOJA "
	cQry += "LEFT JOIN "+ RetSqlName("SE5") +" SE5 (NOLOCK) "
	cQry += "    ON SE5.D_E_L_E_T_ <> '*' "
	cQry += "    AND SE5.E5_FILIAL = SE1.E1_FILIAL "
	cQry += "    AND SE5.E5_PREFIXO = SE1.E1_PREFIXO "
	cQry += "    AND SE5.E5_TIPO = SE1.E1_TIPO "
	cQry += "    AND SE5.E5_NUMERO = SE1.E1_NUM "
	cQry += "    AND SE5.E5_PARCELA = SE1.E1_PARCELA "
	cQry += "    AND SE5.E5_CLIFOR = SE1.E1_CLIENTE "
	cQry += "    AND SE5.E5_LOJA = SE1.E1_LOJA "
	cQry += "    AND SE5.E5_RECPAG = 'R' "
	cQry += "    AND SE5.E5_SITUACA <> 'C' "
	cQry += "    AND ( (SE5.E5_TIPODOC = 'VL' AND SE5.E5_MOTBX = 'NOR' AND SE5.E5_ORIGEM <> 'LOJXREC' ) OR (SE5.E5_TIPODOC = 'BA' AND SE5.E5_MOTBX <> 'LIQ') ) "
	cQry += "    AND SE5.E5_TIPODOC NOT IN ('MT','JR','ES','M2','J2','IB','AP','BL','C2','CB','CM','D2','DC','DV','NCC','SG','TC') "
	cQry += "LEFT JOIN "+ RetSqlName("SA1") +" SA1 (NOLOCK) "
	cQry += "    ON SA1.D_E_L_E_T_ <> '*' "
	cQry += "    AND SA1.A1_FILIAL = '" + xFilial("SA1") + "' "
	cQry += "    AND SA1.A1_COD = UF2.UF2_CLIENT "
	cQry += "    AND SA1.A1_LOJA = UF2.UF2_LOJA "
	cQry += "LEFT JOIN  "+ RetSqlName("SED") +" SED (NOLOCK) "
	cQry += "	ON SED.D_E_L_E_T_ <> '*' "
	If lSEDEx
		cQry += "	AND SED.ED_FILIAL = SE1.E1_FILIAL "
	EndIf
	cQry += "	AND SED.ED_CODIGO = SE1.E1_NATUREZ "
	cQry += "LEFT JOIN "
	cQry += "   (SELECT MAX(UJ0.UJ0_CODBEN) ITEM, "
	cQry += "   	UJ0.UJ0_CONTRA CONTRATO "
	cQry += "   	FROM "+ RetSqlName("UJ0") +" UJ0 (NOLOCK) "
	cQry += "   	WHERE UJ0.D_E_L_E_T_ <> '*' "
	cQry += "   	AND UJ0.UJ0_FILIAL = '"+ xFilial("UF2") +"' "
	cQry += "   	GROUP BY UJ0.UJ0_CONTRA "
    cQry += "   ) FIRST_UJ0 "
	cQry += "   ON UF2.UF2_CODIGO = FIRST_UJ0.CONTRATO "
	cQry += "WHERE UF2.D_E_L_E_T_ <> '*' "
	cQry += "	AND UF2.UF2_MSFIL = '"+ cFilAnt +"' "
	If !Empty(dDataAtivDe) .Or. !Empty(dDataAtivAte)
		cQry += "	AND UF2.UF2_DTATIV BETWEEN '"+ DTOS(dDataAtivDe) +"' AND '"+ DTOS(dDataAtivAte) +"'  " // Intervalo Data de Ativação de Contrato
	EndIf
	If !Empty(cPlanos)
		cQry += "	AND UF2.UF2_PLANO IN "+ FormatIn( AllTrim(cPlanos),";") +" " // Multiseleção Planos
	EndIf
	If !Empty(cNaturezaDe) .Or. !Empty(cNaturezaAte)
		cQry += "	AND SE1.E1_NATUREZ BETWEEN '"+ cNaturezaDe +"' AND '"+ cNaturezaAte +"'  " // Intervalo de Natureza
	EndIf
	cQry += "GROUP BY SED.ED_CODIGO, SED.ED_DESCRIC, UF2.UF2_CODIGO, SA1.A1_COD, "
	cQry += "	SA1.A1_NOME, UF2.UF2_DTATIV, SA1.A1_DDD, SA1.A1_TEL, UF2.UF2_STATUS "

	cQry := ChangeQuery(cQry)

	If Select("TMPUF2") > 0
		TMPUF2->(DbCloseArea())
	EndIf

	TcQuery cQry New Alias "TMPUF2"

	oReport:SetMeter(TMPUF2->(LastRec()))

	While !oReport:Cancel() .And. TMPUF2->(!EOF())

		oReport:IncMeter()

		If oReport:Cancel()
			Exit
		EndIf

		oSection1:Cell("CONTRATO"):SetValue(TMPUF2->CONTRATO)
		oSection1:Cell("COD_CLIENTE"):SetValue(TMPUF2->COD_CLIENTE)
		oSection1:Cell("NOME_CLIENTE"):SetValue(TMPUF2->NOME_CLIENTE)
		oSection1:Cell("DATA_ATIVACAO"):SetValue( DTOC(STOD(TMPUF2->DATA_ATIVACAO)) )
		oSection1:Cell("COD_NATUREZA"):SetValue(TMPUF2->COD_NATUREZA)
		oSection1:Cell("DESC_NATUREZA"):SetValue(TMPUF2->DESC_NATUREZA)
		oSection1:Cell("TELEFONE"):SetValue(TMPUF2->TELEFONE)
		oSection1:Cell("VALOR_PAGO"):SetValue(TMPUF2->VALOR_PAGO)
		oSection1:Cell("QTD_PARCELAS_PAGAS"):SetValue(TMPUF2->QTD_PARCELAS_PAGAS)
		oSection1:Cell("VALOR_ABERTO"):SetValue(TMPUF2->VALOR_ABERTO)
		oSection1:Cell("QTD_PARCELAS_ABERTAS"):SetValue(TMPUF2->QTD_PARCELAS_ABERTAS)
		oSection1:Cell("STATUS"):SetValue( BuscarStatus(TMPUF2->STATUS) )
		oSection1:Cell("DIAS_VENCIDOS"):SetValue(TMPUF2->DIAS_VENCIDOS)
		oSection1:Cell("STATUS_SERVICO"):SetValue(TMPUF2->STATUS_SERVICO)
		oSection1:Cell("SALDO_QUITACAO"):SetValue(TMPUF2->SALDO_QUITACAO)

		oSection1:PrintLine()
		oReport:SkipLine()

		TMPUF2->(dbSkip())
	EndDo

	oSection1:Finish()

	TMPUF2->(dbCloseArea())

Return

/*/{Protheus.doc} ReportDefAnalitPlano
Definição do relatório analítico por plano
@type function
@version 12.1.27
@author nata.queiroz
@since 13/07/2021
@return object, oReport
/*/
Static Function ReportDefAnalitPlano()
	Local oReport := Nil
	Local oSection1 := Nil
	Local oBreak1 := Nil
    Local cReferencia := "(" + DTOC(dDatabase) + ")"
	Local cTitle := "Visão Inadimplência Por Plano Analítico " + cReferencia
	Local cHelp := "Relatório apresenta dados de inadimplência por plano de forma analítica."

	oReport	:= TReport():New("RFUNR015",cTitle,"RFUNR015",{|oReport| PrintRptAP(oReport, oSection1)},cHelp)
	oReport:SetLandscape()	// Orientação paisagem
	oReport:HideParamPage()	// Inibe impressão da pagina de parametros
	oReport:SetUseGC(.F.) // Desabilita o botão <Gestao Corporativa> do relatório

	oSection1 	:= TRSection():New(oReport,"Visão Inadimplência Por Plano Analítico " + cReferencia,{"TMPUF2"})
	oSection1:SetAutoSize(.T.)

	TRCell():New(oSection1, "CONTRATO"	          , "TMPUF2", "Contrato"            , PesqPict("UF2","UF2_CODIGO"), TamSX3("UF2_CODIGO")[1]   )
	TRCell():New(oSection1, "COD_CLIENTE"	      , "TMPUF2", "Cod Cliente"         , PesqPict("SA1","A1_COD")    , TamSX3("A1_COD")[1]       )
	TRCell():New(oSection1, "NOME_CLIENTE"	      , "TMPUF2", "Nome Cliente"        , PesqPict("SA1","A1_NOME")   , TamSX3("A1_NOME")[1]-5    )
	TRCell():New(oSection1, "DATA_ATIVACAO"       , "TMPUF2", "Data Ativação"       , PesqPict("UF2","UF2_DTATIV"), TamSX3("UF2_DTATIV")[1]   )
	TRCell():New(oSection1, "COD_PLANO"           , "TMPUF2", "Cod Plano"           , PesqPict("UF0","UF0_CODIGO"), TamSX3("UF0_CODIGO")[1]   )
	TRCell():New(oSection1, "DESC_PLANO"	      , "TMPUF2", "Desc Plano"          , PesqPict("UF0","UF0_DESCRI"), TamSX3("UF0_DESCRI")[1]-5 )
	TRCell():New(oSection1, "TELEFONE"	          , "TMPUF2", "Telefone"            , PesqPict("SA1","A1_TEL"    ), TamSX3("A1_TEL"  )[1]+3   )
	TRCell():New(oSection1, "VALOR_PAGO"          , "TMPUF2", "Valor Pago"          , PesqPict("SE1","E1_VALOR"  ), TamSX3("E1_VALOR"  )[1]   )
	TRCell():New(oSection1, "QTD_PARCELAS_PAGAS"  , "TMPUF2", "Qtd Parc Pagas"      , "@E 999999999999"           , TamSX3("E1_VALOR"  )[1]   )
	TRCell():New(oSection1, "VALOR_ABERTO"        , "TMPUF2", "Valor Aberto"        , PesqPict("SE1","E1_VALOR"  ), TamSX3("E1_VALOR"  )[1]   )
	TRCell():New(oSection1, "QTD_PARCELAS_ABERTAS", "TMPUF2", "Qtd Parc Abertas"    , "@E 999999999999"           , TamSX3("E1_VALOR"  )[1]   )
	TRCell():New(oSection1, "STATUS"              , "TMPUF2", "Status"              , PesqPict("UF2","UF2_STATUS"), TamSX3("UF2_STATUS")[1]+5 )
	TRCell():New(oSection1, "DIAS_VENCIDOS"       , "TMPUF2", "Dias Vencidos"       , "@E 999999999999"           , TamSX3("E1_VALOR"  )[1]   )
	TRCell():New(oSection1, "STATUS_SERVICO"      , "TMPUF2", "Stts Serviço"        , PesqPict("UF2","UF2_STATUS"), TamSX3("UF2_STATUS")[1]   )
	TRCell():New(oSection1, "SALDO_QUITACAO"      , "TMPUF2", "Saldo Quitação"      , PesqPict("SE1","E1_VALOR"  ), TamSX3("E1_VALOR"  )[1]   )

	oBreak1 := TRBreak():New(oSection1,{|| oSection1:Cell('COD_PLANO'):uPrint },'Sub-Total',.F.)

	TRFunction():New(oSection1:Cell("VALOR_PAGO"),/* cID */,"SUM",oBreak1,"Total Valores Pagos",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("QTD_PARCELAS_PAGAS"),/* cID */,"SUM",oBreak1,"Total Parcelas Pagas",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("VALOR_ABERTO"),/* cID */,"SUM",oBreak1,"Total Valores Abertos",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("QTD_PARCELAS_ABERTAS"),/* cID */,"SUM",oBreak1,"Total Parcelas Abertas",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)
	TRFunction():New(oSection1:Cell("SALDO_QUITACAO"),/* cID */,"SUM",oBreak1,"Total Saldo Quitação",/*cPicture*/,/*uFormula*/,.T. /*lEndSection*/,.F. /*lEndReport*/,/*lEndPage*/)

Return oReport

/*/{Protheus.doc} PrintRptAP
Impresão do relatório analítico por plano
@type function
@version 12.1.27
@author nata.queiroz
@since 13/07/2021
@param oReport, object, oReport
@param oSection1, object, oSection1
/*/
Static Function PrintRptAP(oReport, oSection1)
	Local cQry := ""

	// Parâmetros
	Local dDataAtivDe := MV_PAR03
	Local dDataAtivAte := MV_PAR04
	Local cNaturezaDe := MV_PAR05
	Local cNaturezaAte := MV_PAR06
	Local cPlanos := MV_PAR07

	oSection1:Init()

	cQry := "SELECT UF2.UF2_CODIGO CONTRATO, "
	cQry += "   SA1.A1_COD COD_CLIENTE, "
	cQry += "   SA1.A1_NOME NOME_CLIENTE, "
	cQry += "   UF2.UF2_DTATIV DATA_ATIVACAO, "
	cQry += "   UF0.UF0_CODIGO COD_PLANO, "
	cQry += "   UF0.UF0_DESCRI DESC_PLANO, "
	cQry += "   (SA1.A1_DDD + SA1.A1_TEL) TELEFONE, "
	cQry += "   UF2.UF2_STATUS STATUS, "
	cQry += "	SUM(CASE WHEN SE1.E1_BAIXA <> '' THEN SE5.E5_VALOR ELSE 0 END) VALOR_PAGO, "
	cQry += "	SUM(CASE WHEN SE1.E1_BAIXA <> '' THEN 1 ELSE 0 END) QTD_PARCELAS_PAGAS, "
	cQry += "	SUM(CASE WHEN (SE1.E1_BAIXA = '' AND SE1.E1_VENCORI < '"+ DTOS(dDatabase) +"') THEN SE1.E1_SALDO ELSE 0 END) VALOR_ABERTO, "
	cQry += "	SUM(CASE WHEN (SE1.E1_BAIXA = '' AND SE1.E1_VENCORI < '"+ DTOS(dDatabase) +"') THEN 1 ELSE 0 END) QTD_PARCELAS_ABERTAS, "
	cQry += "	DATEDIFF(DAY, CAST(MIN(CASE WHEN (SE1.E1_BAIXA = '' AND SE1.E1_VENCORI < '"+ DTOS(dDatabase) +"') THEN SE1.E1_VENCORI ELSE NULL END) AS DATE), CAST('"+ DTOS(dDatabase) +"' AS DATE)) DIAS_VENCIDOS, "
	cQry += "	CASE WHEN COUNT(FIRST_UJ0.CONTRATO) > 0 THEN 'SIM' ELSE 'NAO' END STATUS_SERVICO, "
	cQry += "	SUM(SE1.E1_SALDO) SALDO_QUITACAO "
	cQry += "FROM "+ RetSqlName("UF2") +" UF2 (NOLOCK) "
	cQry += "INNER JOIN "+ RetSqlName("SE1") +" SE1 (NOLOCK) "
	cQry += "    ON SE1.D_E_L_E_T_ <> '*' "
	cQry += "    AND SE1.E1_FILIAL = UF2.UF2_MSFIL "
	cQry += "    AND SE1.E1_XCTRFUN = UF2.UF2_CODIGO "
	cQry += "    AND SE1.E1_CLIENTE = UF2.UF2_CLIENT "
	cQry += "    AND SE1.E1_LOJA = UF2.UF2_LOJA "
	cQry += "LEFT JOIN "+ RetSqlName("SE5") +" SE5 (NOLOCK) "
	cQry += "    ON SE5.D_E_L_E_T_ <> '*' "
	cQry += "    AND SE5.E5_FILIAL = SE1.E1_FILIAL "
	cQry += "    AND SE5.E5_PREFIXO = SE1.E1_PREFIXO "
	cQry += "    AND SE5.E5_TIPO = SE1.E1_TIPO "
	cQry += "    AND SE5.E5_NUMERO = SE1.E1_NUM "
	cQry += "    AND SE5.E5_PARCELA = SE1.E1_PARCELA "
	cQry += "    AND SE5.E5_CLIFOR = SE1.E1_CLIENTE "
	cQry += "    AND SE5.E5_LOJA = SE1.E1_LOJA "
	cQry += "    AND SE5.E5_RECPAG = 'R' "
	cQry += "    AND SE5.E5_SITUACA <> 'C' "
	cQry += "    AND ( (SE5.E5_TIPODOC = 'VL' AND SE5.E5_MOTBX = 'NOR' AND SE5.E5_ORIGEM <> 'LOJXREC' ) OR (SE5.E5_TIPODOC = 'BA' AND SE5.E5_MOTBX <> 'LIQ') ) "
	cQry += "    AND SE5.E5_TIPODOC NOT IN ('MT','JR','ES','M2','J2','IB','AP','BL','C2','CB','CM','D2','DC','DV','NCC','SG','TC') "
	cQry += "LEFT JOIN "+ RetSqlName("SA1") +" SA1 (NOLOCK) "
	cQry += "    ON SA1.D_E_L_E_T_ <> '*' "
	cQry += "    AND SA1.A1_FILIAL = '" + xFilial("SA1") + "' "
	cQry += "    AND SA1.A1_COD = UF2.UF2_CLIENT "
	cQry += "    AND SA1.A1_LOJA = UF2.UF2_LOJA "
	cQry += "LEFT JOIN "+ RetSqlName("UF0") +" UF0 (NOLOCK) "
	cQry += "    ON UF0.D_E_L_E_T_ <> '*' "
	cQry += "    AND UF0.UF0_FILIAL = UF2.UF2_FILIAL "
	cQry += "    AND UF0.UF0_CODIGO = UF2.UF2_PLANO "
	cQry += "LEFT JOIN "
	cQry += "   (SELECT MAX(UJ0.UJ0_CODBEN) ITEM, "
	cQry += "   	UJ0.UJ0_CONTRA CONTRATO "
	cQry += "   	FROM "+ RetSqlName("UJ0") +" UJ0 (NOLOCK) "
	cQry += "   	WHERE UJ0.D_E_L_E_T_ <> '*' "
	cQry += "   	AND UJ0.UJ0_FILIAL = '"+ xFilial("UF2") +"' "
	cQry += "   	GROUP BY UJ0.UJ0_CONTRA "
	cQry += "   ) FIRST_UJ0 "
	cQry += "   ON UF2.UF2_CODIGO = FIRST_UJ0.CONTRATO "
	cQry += "WHERE UF2.D_E_L_E_T_ <> '*' "
	cQry += "	AND UF2.UF2_MSFIL = '"+ cFilAnt +"' "
	If !Empty(dDataAtivDe) .Or. !Empty(dDataAtivAte)
		cQry += "	AND UF2.UF2_DTATIV BETWEEN '"+ DTOS(dDataAtivDe) +"' AND '"+ DTOS(dDataAtivAte) +"'  " // Intervalo Data de Ativação de Contrato
	EndIf
	If !Empty(cPlanos)
		cQry += "	AND UF2.UF2_PLANO IN "+ FormatIn( AllTrim(cPlanos),";") +" " // Multiseleção Planos
	EndIf
	If !Empty(cNaturezaDe) .Or. !Empty(cNaturezaAte)
		cQry += "	AND SE1.E1_NATUREZ BETWEEN '"+ cNaturezaDe +"' AND '"+ cNaturezaAte +"'  " // Intervalo de Natureza
	EndIf
	cQry += "GROUP BY UF0.UF0_CODIGO, UF0.UF0_DESCRI, UF2.UF2_CODIGO, SA1.A1_COD, "
	cQry += "	SA1.A1_NOME, UF2.UF2_DTATIV, SA1.A1_DDD, SA1.A1_TEL, UF2.UF2_STATUS "

	cQry := ChangeQuery(cQry)

	If Select("TMPUF2") > 0
		TMPUF2->(DbCloseArea())
	EndIf

	TcQuery cQry New Alias "TMPUF2"

	oReport:SetMeter(TMPUF2->(LastRec()))

	While !oReport:Cancel() .And. TMPUF2->(!EOF())

		oReport:IncMeter()

		If oReport:Cancel()
			Exit
		EndIf

		oSection1:Cell("CONTRATO"):SetValue(TMPUF2->CONTRATO)
		oSection1:Cell("COD_CLIENTE"):SetValue(TMPUF2->COD_CLIENTE)
		oSection1:Cell("NOME_CLIENTE"):SetValue(TMPUF2->NOME_CLIENTE)
		oSection1:Cell("DATA_ATIVACAO"):SetValue( DTOC(STOD(TMPUF2->DATA_ATIVACAO)) )
		oSection1:Cell("COD_PLANO"):SetValue(TMPUF2->COD_PLANO)
		oSection1:Cell("DESC_PLANO"):SetValue(TMPUF2->DESC_PLANO)
		oSection1:Cell("TELEFONE"):SetValue(TMPUF2->TELEFONE)
		oSection1:Cell("VALOR_PAGO"):SetValue(TMPUF2->VALOR_PAGO)
		oSection1:Cell("QTD_PARCELAS_PAGAS"):SetValue(TMPUF2->QTD_PARCELAS_PAGAS)
		oSection1:Cell("VALOR_ABERTO"):SetValue(TMPUF2->VALOR_ABERTO)
		oSection1:Cell("QTD_PARCELAS_ABERTAS"):SetValue(TMPUF2->QTD_PARCELAS_ABERTAS)
		oSection1:Cell("STATUS"):SetValue( BuscarStatus(TMPUF2->STATUS) )
		oSection1:Cell("DIAS_VENCIDOS"):SetValue(TMPUF2->DIAS_VENCIDOS)
		oSection1:Cell("STATUS_SERVICO"):SetValue(TMPUF2->STATUS_SERVICO)
		oSection1:Cell("SALDO_QUITACAO"):SetValue(TMPUF2->SALDO_QUITACAO)

		oSection1:PrintLine()
		oReport:SkipLine()

		TMPUF2->(dbSkip())
	EndDo

	oSection1:Finish()

	TMPUF2->(dbCloseArea())

Return

/*/{Protheus.doc} BuscarStatus
Busca nome do status
@type function
@version 12.1.27
@author nata.queiroz
@since 13/07/2021
@param cStatus, character, cStatus
@return character, cStatusNome
/*/
Static Function BuscarStatus(cStatus)
	Local cStatusNome := ""

	Do Case
	Case cStatus == "P"
		cStatusNome := "Pré-Cadastro"
	Case cStatus == "A"
		cStatusNome := "Ativo"
	Case cStatus == "S"
		cStatusNome := "Suspenso"
	Case cStatus == "C"
		cStatusNome := "Cancelado"
	Case cStatus == "F"
		cStatusNome := "Finalizado"
	EndCase

Return cStatusNome

/*/{Protheus.doc} AjustaSX1
Cria/Atualiza perguntas na tabela SX1
@type function
@version 12.1.27
@author nata.queiroz
@since 13/07/2021
@param cPerg, character, cPerg
/*/
Static Function AjustaSX1(cPerg)
	Local aRegs := {}
	Default cPerg := ""

	// verifico se o nome do grupo de pergunta foi passado
	If !Empty(cPerg)

		// parametros SX1
		aAdd(aRegs,{cPerg,'01','Dt Referencia de ','','','mv_ch1','D', TamSx3("E1_VENCTO")[1], 0, 0,'G','','mv_par01','','','','','',''})
		aAdd(aRegs,{cPerg,'02','Dt Referencia ate ','','','mv_ch2','D', TamSx3("E1_VENCTO")[1], 0, 0,'G','','mv_par02','','','','','',''})
		aAdd(aRegs,{cPerg,'03','Dt Ativacao de ','','','mv_ch3','D', TamSx3("U00_DTATIV")[1], 0, 0,'G','','mv_par03','','','','','',''})
		aAdd(aRegs,{cPerg,'04','Dt Ativacao ate','','','mv_ch4','D', TamSx3("U00_DTATIV")[1], 0, 0,'G','','mv_par04','','','','','',''})
		aAdd(aRegs,{cPerg,'05','Naturez de','','','mv_ch5','C', TamSx3("ED_CODIGO")[1], 0, 0,'G','','mv_par05','','','','','','SED'})
		aAdd(aRegs,{cPerg,'06','Naturez ate','','','mv_ch6','C', TamSx3("ED_CODIGO")[1], 0, 0,'G','','mv_par06','','','','','','SED'})
		aAdd(aRegs,{cPerg,'07','Planos','','','mv_ch7','C', 99, 0, 0,'G','','mv_par07','','','','','','UF0MRK'})
		aAdd(aRegs,{cPerg,'08','Quebra Por','','','mv_ch8','C', 1, 0, 0,'C','','mv_par08','1-Natureza','2-Plano','','','',''})
		aAdd(aRegs,{cPerg,'09','Tipo Relatorio','','','mv_ch9','C', 1, 0, 0,'C','','mv_par09','1-Sintético','2-Analítico','','','',''})

		// cria os dados da SX1
		U_CriaSX1( aRegs )

	EndIf

Return
