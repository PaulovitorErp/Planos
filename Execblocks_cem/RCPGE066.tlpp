#Include 'totvs.ch'

/*/{Protheus.doc} RCPGE066
Rotina para geração de jazigos em lote.	
@type function
@version 1.0  
@author Wellington Gonçalves
@since 24/02/2016
/*/
User Function RCPGE066()

	Local aArea				:= GetArea()
	Local aAreaU08			:= U08->(GetArea())
	Local aAreaU09			:= U09->(GetArea())
	Local aAreaU10			:= U10->(GetArea())
	Local cPerg 			:= "RCPGE066"
	Local cQuadra			:= ""
	Local cModulo			:= ""
	Local cJazigoDe			:= ""
	Local cJazigoAte		:= ""
	Local nCapacidade		:= 0
	Local lContinua			:= .T.

	// cria as perguntas na SX1
	AjustaSx1(cPerg)

	// enquanto o usuário não cancelar a tela de perguntas
	While lContinua

		// chama a tela de perguntas
		lContinua := Pergunte(cPerg,.T.)

		if lContinua

			cQuadra 	:= MV_PAR01
			cModulo		:= MV_PAR02
			cJazigoDe	:= MV_PAR03
			cJazigoAte	:= MV_PAR04
			nCapacidade	:= MV_PAR05

			if ValidParam(cQuadra, cModulo, cJazigoDe, cJazigoAte)
				
				if !Empty(cJazigoDe) .And. !Empty(cJazigoDe)
					cMsgPergunta := "Deseja gerar os Ossuários para a quadra " + AllTrim(cQuadra) + ", módulo " + AllTrim(cModulo) + " ";
					+ "e jazigo inicial " + cJazigoDe + " até o jazigo " +cJazigoAte+ " ?"
				elseIf !Empty(cModulo)
					cMsgPergunta := "Deseja gerar os Ossuários para a quadra " + AllTrim(cQuadra) + " e módulo " + AllTrim(cModulo) + " ?"
				else
					cMsgPergunta := "Deseja gerar os Ossuários para a quadra " + AllTrim(cQuadra) + " ?"
				endIf

				if MsgYesNo(cMsgPergunta)
					MsAguarde( {|| GeraOssuarios(cQuadra, cModulo, cJazigoDe, cJazigoAte, nCapacidade)}, "Aguarde", "Processando registros...", .F. )
				endif

			endif

		endif

	EndDo

	RestArea(aAreaU08)
	RestArea(aAreaU09)
	RestArea(aAreaU10)
	RestArea(aArea)

Return(Nil)

/*/{Protheus.doc} ValidParam
Função que valida os parâmetros informados.
@type function
@version 1.0 
@author g.sampaio
@since 14/04/2021
@param cQuadra, character, codigo da quadra
@param cModulo, character, codigo do modulo
@param cJazigoDe, character, inicio da faixa do jazigo
@param cJazigoAte, character, fim da faixa do jazigo
@param cAtivo, character, jazigo ativo
@param nGeraOssuario, character, gera ossuario vinculado
@param nQtdNichos, numeric, quantidade de nichos
@return logical, retorno sobre a validacao
/*/
Static Function ValidParam(cQuadra, cModulo, cJazigoDe, cJazigoAte )

	Local aArea				:= GetArea()
	Local aAreaU08			:= U08->(GetArea())
	Local aAreaU09			:= U09->(GetArea())
	Local lRet 				:= .F.

	// verifico se foram preenchidos todos os parâmetros
	if Empty(cQuadra)
		Alert("Informe a Quadra!")
	elseif !Empty(cJazigoDe) .And. !Empty(cJazigoAte) .And. cJazigoDe > cJazigoAte
		Alert("O Jazigo final deve ser maior ou igual ao Jazigo inicial!")
	else

		// verifico se a quadra informada é válida
		U08->(DbSetOrder(1)) // U08_FILIAL + U08_CODIGO
		if U08->(DbSeek(xFilial("U08") + cQuadra))
			
			lRet := .T.
			
			if !Empty(cModulo)
				// verifico se a quadra / módulo informado é válido
				U09->(DbSetOrder(1)) // U09_FILIAL + U09_QUADRA + U09_CODIGO
				if !U09->(DbSeek(xFilial("U09") + cQuadra + cModulo))					
					lRet := .F.
					Alert("O módulo informado é inválido!")
				endif
			endIf

		else
			Alert("A Quadra informada é inválida!")
		endif

	endif

	RestArea(aAreaU08)
	RestArea(aAreaU09)
	RestArea(aArea)

Return(lRet)

/*/{Protheus.doc} GeraOssuarios
Gera Ossuarios em Lote
@type function
@version 1.0 
@author g.sampaio
@since 14/04/2021
@param cQuadra, character, codigo da quadra
@param cModulo, character, codigo do modulo
@param cJazigoDe, character,  jazigo inicial
@param cJazigoAte, character, jazigo final
/*/
Static Function GeraOssuarios(cQuadra, cModulo, cJazigoDe, cJazigoAte, nCapacidade)

	Local aArea 			:= GetArea()
	Local aAreaU08			:= U08->(GetArea())
	Local aAreaU09			:= U09->(GetArea())
	Local cCodigo           := ""
	Local lContinua			:= .T.
	Local lSucesso			:= .F.
	Local oJazOss           := Nil

	BEGIN TRANSACTION

		if !Empty(cQuadra)

			if !Empty(cQuadra) .And. Empty(cModulo) .And. Empty(cJazigoDe) .And. Empty(cJazigoAte)

				// verifico se a quadra informada é válida
				U08->(DbSetOrder(1)) // U08_FILIAL + U08_CODIGO
				if U08->(DbSeek(xFilial("U08") + cQuadra))
					if U08->(Reclock("U08",.F.))
						U08->U08_VINOSS := "1"
						U08->(MsUnlock())
					endIf
				endIf

			endIf

			if !Empty(cModulo) .And. Empty(cJazigoDe) .And. Empty(cJazigoAte)

				// verifico se a quadra / módulo informado é válido
				U09->(DbSetOrder(1)) // U09_FILIAL + U09_QUADRA + U09_CODIGO
				if U09->(DbSeek(xFilial("U09") + cQuadra + cModulo))
					if U09->(Reclock("U09",.F.))
						U09->U09_VINOSS := "1"
						U09->(MsUnlock())
					endIf
				endIf

			endIf

			if !Empty(cJazigoDe) .And. !Empty(cJazigoAte)

				cCodigo := cJazigoDe				

				While lContinua .And. cCodigo >= cJazigoDe .AND. cCodigo <= cJazigoAte
					oJazOss := OssuarioVinculado():New(.F.)
					if oJazOss:OssuarioUsado(cQuadra, cModulo, cCodigo, .F.)
						lContinua := oJazOss:IncluiOssuario(cQuadra, cModulo, cCodigo, nCapacidade)
					endIf

					FreeObj(oJazOss)
					oJazOss := Nil

					cCodigo := Soma1(cCodigo)
				EndDo

				if lContinua
					lSucesso := .T.
				EndIf

			else
				oJazOss := OssuarioVinculado():New(.T., cQuadra, cModulo)
				lSucesso := oJazOss:VinculaOssuario()				 
			endIf

		endIf

		// se a transação foi realizada com sucesso
		if lSucesso
			// finalizo o controle de transação
			Aviso("Sucesso!" , "Ossuários vinculados gerados com sucesso!" , {"OK"} , 1)
		else
			// faço o rollback da transação
			DisarmTransaction()
			MsgAlert("Ocorreu um problema geração dos ossuários vinculados a jazigos em lote, ou os jazigos já estão vinculados!")
		endif

	END TRANSACTION

	RestArea(aAreaU09)
	RestArea(aAreaU08)
	RestArea(aArea)

Return(Nil)

/*/{Protheus.doc} AjustaSX1
Função que cria as perguntas na SX1.	
@type function
@version 1.0  
@author Wellington Gonçalves
@since 24/02/2016
@param cPerg, character, Grupo de Perguntas
/*/
Static Function AjustaSX1(cPerg)

	Local aRegs				:= {}

	Default cPerg	:= ""

	// verifico se o nome do grupo de pergunta foi passado
	if !Empty(cPerg)

		// parametros SX1
		aAdd(aRegs,{cPerg,'01','Quadra?'        		,'','','mv_ch1','C', TamSx3("U10_QUADRA")[1]    	, 0, 0,'G','','mv_par01','','','','','','U08'})
		aAdd(aRegs,{cPerg,'02','Módulo?'           		,'','','mv_ch2','C', TamSx3("U10_MODULO")[1]    	, 0, 0,'G','','mv_par02','','','','','','U09'})
		aAdd(aRegs,{cPerg,'03','Jazigo inicial?'  		,'','','mv_ch3','C', TamSx3("U10_CODIGO")[1]    	, 0, 0,'G','','mv_par03','','','','','',''})
		aAdd(aRegs,{cPerg,'04','Jazigo final?'    		,'','','mv_ch4','C', TamSx3("U10_CODIGO")[1]    	, 0, 0,'G','','mv_par04','','','','','',''})
		aAdd(aRegs,{cPerg,'05','Capacidade Ossuario?'   ,'','','mv_ch5','N', 2   							, 0, 0,'G','','mv_par05','','','','','',''})

		// cria os dados da SX1
		U_CriaSX1( aRegs )

	endIf

Return(Nil)
