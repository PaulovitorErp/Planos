#include "totvs.ch"

/*/{Protheus.doc} RUTILE81
Verifica se o usuário tem permissão para incluir ou alterar documentos
AC9_OBJETO - iif(existblock("VirtusValidaObjeto"),U_VirtusValidaObjeto(),.T.) 
@type function
@version 1.0
@author g.sampaio
@since 24/04/2024
@return logical, retorno da função que verifica se o usuário tem permissão para incluir ou alterar documentos
/*/
User Function RUTILE81()

	Local lRetorno              := .T.
	Local oVirtusGestaoAcessos	:= VirtusGestaoAcessos():New()
	Local nPosRecno             := aScan(aHeader,{|x| AllTrim(x[2]) == "AC9_REC_WT"})
	Local nPosObjeto            := aScan(aHeader,{|x| AllTrim(x[2]) == "AC9_OBJETO"})

	// verifica se as rotinas estão ativas
	If oVirtusGestaoAcessos:Rotinas()

		// mudo o valor do retorno para falso
		lRetorno := .F.

		oVirtusGestaoAcessos:AcessosUsuario()

		If oVirtusGestaoAcessos:ValidaAcessos(18) // incluir documentos
			lRetorno := .T.
		ElseIf oVirtusGestaoAcessos:ValidaAcessos(19) // alterar documentos
			lRetorno := .T.
		Else
			MsgAlert("Usuário sem permissão para incluir/alterar documentos!", "Acesso Negado")
		EndIf

		// se o retorno for verdadeiro e o usuário não tem permissão para alterar documentos
		If lRetorno .And. !aCols[N][Len(aHeader)+1] .And. aCols[N][nPosRecno] > 0;
				.And. U_RTILE81A(aCols[N][nPosRecno], aCols[N][nPosObjeto]) .And. !oVirtusGestaoAcessos:ValidaAcessos(19)
			lRetorno := .F.
			MsgAlert("Usuário sem permissão para alterar documentos!", "Acesso Negado")
		EndIf

	EndIf

Return(lRetorno)

User Function RTILE81A(nRecno, cObjeto)

	Local aArea         As Array
	Local aAreaAC9      As Array
	Local aAreaACB      As Array
	Local lRetorno      As Logical

	Default nRecno  := 0
	Default cObjeto := ""

	lRetorno    := .F.
	aArea       := GetArea()
	aAreaAC9    := AC9->(GetArea())
	aAreaACB    := ACB->(GetArea())

    If AllTrim(ReadVar()) == "M->AC9_OBJETO"
        cObjeto := AllTrim(M->AC9_OBJETO)
    EndIf

	If nRecno > 0

        // posiciono no registro da AC9
		AC9->(DbGoTo(nRecno))

		ACB->(DBSetOrder(1))
		If ACB->(MsSeek(xFilial("ACB")+AC9->AC9_CODOBJ))
			If AllTrim(AllTrim(ACB->ACB_OBJETO)) <> AllTrim(cObjeto)
				lRetorno := .T.
			EndIf
		EndIf

	EndIf

	RestArea(aAreaACB)
	RestArea(aAreaAC9)
	RestArea(aArea)

Return(lRetorno)


