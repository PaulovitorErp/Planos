#include "topconn.ch"
#include "totvs.ch"
#include "tbiconn.ch"
#include "rwmake.ch"

#define CRLF CHR(13)+CHR(10)

/*/{Protheus.doc} RCPGR034
Relatorio de contratos utilizados
pela primeira vez no periodo
(Baseado no RCPGR020)
@type function
@version 1.0
@author g.sampaio
@since 30/01/2021
@return return_type, return_description
/*/
User Function RCPGR034()
	Local oReport

	oReport:= ReportDef()
	oReport:PrintDialog()

Return(Nil)

/*/{Protheus.doc} ReportDef
Na seção de definição do relatório, função ReportDef(), 
devem ser criados os componentes de impressão, as seções 
e as células, os totalizadores e demais componentes que 
o usuário poderá personalizar no relatório.

@type function
@version 1.0 
@author g.sampaio
@since 30/01/2021
@return object, objeto de impressao
/*/
Static Function ReportDef()
	Local oReport       := Nil
	Local oContrato     := Nil
	Local oTotalGer     := Nil
	Local cTitle    	:= "Relatório de Contratos utilizados pela primeira vez"

	Private cPerg		:= "RCPGR034"

	oReport	:= TReport():New("RCPGR034",cTitle,"RCPGR034",{|oReport| PrintReport(oReport,oContrato,oTotalGer)},"Este relatório apresenta a relação de contratos utilizados pela primeira vez.")
	oReport:SetLandscape()			// Orientação paisagem
	oReport:HideParamPage()			// Inibe impressão da pagina de parametros
	oReport:SetUseGC( .F. ) 		// Desabilita o botão <Gestao Corporativa> do relatório

	AjustaSX1(cPerg) // cria as perguntas para gerar o relatorio
	Pergunte(oReport:GetParam(),.F.)

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	oContrato 	:= TRSection():New(oReport,"Contratos",{"QRYCONT"})//,{"Por Contrato","Por Cod. Cliente","Por Nome Cliente"}/*Ordens do Relatório*/,/*Campos do SX3*/,/*Campos do SIX*/)

	TRCell():New(oContrato, "U00_FAQUIS"	, "QRYCONT", "Tipo Aquisição"   ,	PesqPict("U00","U00_FAQUIS"	)   , TamSX3("U00_FAQUIS"	)[1]+1)
	TRCell():New(oContrato, "U00_CODIGO"	, "QRYCONT", "Contrato"	        ,	PesqPict("U00","U00_CODIGO"	)   , TamSX3("U00_CODIGO"	)[1]+1)
	TRCell():New(oContrato, "U00_NOMCLI"	, "QRYCONT", "Cessionario"      ,	PesqPict("U00","U00_NOMCLI"	)   , TamSX3("U00_NOMCLI"	)[1]+1)
	TRCell():New(oContrato, "U00_VALOR"		, "QRYCONT", "Valor"		    ,	PesqPict("U00","U00_VALOR"	)   , TamSX3("U00_VALOR"	)[1]+1)
	TRCell():New(oContrato, "U00_DTATIV"	, "QRYCONT", "Data Ativação"    ,	PesqPict("U00","U00_DTATIV"	)   , TamSX3("U00_DTATIV"	)[1]+3)
	TRCell():New(oContrato, "U04_DATA"		, "QRYCONT", "Data Utilização"  ,	PesqPict("U04","U04_DATA"	)   , TamSX3("U04_DATA"	)[1]+3)
	TRCell():New(oContrato, "DIASUTIL"		, "QRYCONT", "Dias P. Utiliz"   ,	"@!"                            , TamSX3("U04_DTUTIL"	)[1]+3)

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	oTotalGer := TRSection():New(oReport,"Total Geral",{}) //TRSection():New(oReport,"Total Geral",{},,,,,,,,,,,.T.,,,,,1)
	oTotalGer:SetHeaderPage(.F.) //Define que imprime cabeçalho das células no topo da página. (Parâmetro) Se verdadeiro, aponta que imprime o cabeçalho no topo da página
	oTotalGer:SetHeaderSection(.T.) //Define que imprime cabeçalho das células na quebra de seção.(Parâmetro) Se verdadeiro, aponta que imprime cabeçalho na quebra da seção
	oTotalGer:SetTotalInLine(.T.) //Define que a impressão dos totalizadores será em linha. (Parâmetro) Se verdadeiro, imprime os totalizadores em linha

	TRCell():New(oTotalGer,"nQtdGeral", , " ", "@!", 100)
	TRCell():New(oTotalGer,"nTotalGer", , " ", "@!", 200)

Return(oReport)

/*/{Protheus.doc} PrintReport
Funcao para impressao do relatorio
@type function
@version 1.0
@author g.sampaio
@since 30/01/2021
@param oReport, object, objeto de impressao
@param oContrato, object, objeto do contrato
@param oDetalhe, object, objeto do detalhe
@param oTotalGer, object, objeto de total
/*/
Static Function PrintReport(oReport, oContrato, oTotalGer)

	Local cPlano        As Character
	Local cFormaArquis  As Character
	Local cQuery        As Character
	Local dDataDe       As Date
	Local dDataAte      As Date
	Local nCont         As Numeric
	Local nDiasUtiliz	As Numeric
	Local nTotBase      As Numeric
	Local nQtdGeral     As Numeric
	Local nInd          As Numeric
	Local nTotal        As Numeric
	Local nTipoEndereco	As Numeric

	// atribuo valor para as variaveis
	cQuery 			:= "" //Query de busca
	cPlano      	:= ""
	cFormaArquis	:= ""
	nCont			:= 0
	nTotBase		:= 0
	nQtdGeral		:= 0
	nTotalGer		:= 0
	nInd			:= 0
	nTotal			:= 0
	nDiasUtiliz		:= 0

	// trata para os parametros
	cPlano          := MV_PAR01
	dDataDe         := MV_PAR02
	dDataAte        := MV_PAR03
	cFormaArquis    := MV_PAR04
	nTipoEndereco	:= MV_PAR05

	oContrato:Init()

	If Select("QRYCONT") > 0
		QRYCONT->(DbCloseArea())
	Endif

	cQuery := " SELECT U00.U00_FAQUIS, "
	cQuery += "       U00.U00_CODIGO, "
	cQuery += "       U00.U00_VALOR, "
	cQuery += "       U00.U00_NOMCLI, "
	cQuery += "       U00.U00_DTATIV, "
	cQuery += "       ENDERECADOS.DATA_CADASTRO DATA_CADASTRO "
	cQuery += " FROM " + RetSqlName("U00") + " U00 "
	cQuery += " INNER JOIN "
	cQuery += "  (SELECT U04.U04_CODIGO CODIGO, "
	cQuery += "          MIN(U04.U04_DATA) DATA_CADASTRO "
	cQuery += "   FROM " + RetSqlName("U04") + " U04 "
	cQuery += "   WHERE U04.D_E_L_E_T_ = ' ' "
	cQuery += "     AND U04.U04_DATA <> ' ' "

	if nTipoEndereco == 2 // crematorio
		cQuery += " 	AND U04.U04_TIPO = 'C' "
	elseIf nTipoEndereco == 3 // jazigo
		cQuery += " 	AND U04.U04_TIPO = 'J' "
	elseIf nTipoEndereco == 4 // ossario
		cQuery += " 	AND U04.U04_TIPO = 'O' "
	endIf

	cQuery += "   GROUP BY U04.U04_CODIGO) AS ENDERECADOS ON ENDERECADOS.CODIGO = U00.U00_CODIGO "
	cQuery += " WHERE U00.D_E_L_E_T_ = ' ' "

	if !Empty(MV_PAR01)
		cQuery += " 	AND U00.U00_PLANO IN " + FormatIn( AllTrim(MV_PAR01),";" ) + " "
	endIf

	if !Empty(MV_PAR03)
		cQuery += " 	AND ENDERECADOS.DATA_CADASTRO 	BETWEEN '" + DtoS(MV_PAR02) + "' AND '" + DtoS(MV_PAR03) + "' "
	endIf

	if MV_PAR04 == 2 // forma de aquisicao
		cQuery += " 	AND U00.U00_FAQUIS = 'I' "
	elseIf MV_PAR04 == 3 // forma de aquisicao
		cQuery += " 	AND U00.U00_FAQUIS = 'P' "
	endIf

	cQuery += "  AND NOT EXISTS "
	cQuery += "  	( SELECT U04B.U04_CODIGO "
	cQuery += "  	FROM " + RetSqlName("U04") + " U04B "
	cQuery += "  WHERE U04B.D_E_L_E_T_ = ' ' "
	cQuery += "  AND U04B.U04_FILIAL = U00.U00_FILIAL "
	cQuery += "  AND U04B.U04_CODIGO = U00.U00_CODIGO "

	if nTipoEndereco == 2 // crematorio
		cQuery += " 	AND U04B.U04_TIPO = 'C' "
	elseIf nTipoEndereco == 3 // jazigo
		cQuery += " 	AND U04B.U04_TIPO = 'J' "
	elseIf nTipoEndereco == 4 // ossario
		cQuery += " 	AND U04B.U04_TIPO = 'O' "
	endIf

	cQuery += "  AND U04B.U04_DATA <> ENDERECADOS.DATA_CADASTRO ) "
	cQuery += "  AND NOT EXISTS "
	cQuery += " ( SELECT U30.U30_CODIGO FROM " + RetSqlName("U30") + " U30
	cQuery += " WHERE U30.D_E_L_E_T_ = ' '
	cQuery += " AND U30.U30_FILIAL = U00.U00_FILIAL "
	cQuery += " AND U30.U30_CODIGO = U00.U00_CODIGO
	cQuery += " ) "
	cQuery += "  ORDER BY U00.U00_FAQUIS, ENDERECADOS.DATA_CADASTRO, U00.U00_CODIGO, U00.U00_VALOR, U00.U00_NOMCLI "

	cQuery := ChangeQuery(cQuery)

	TcQuery cQuery New Alias "QRYCONT"

	QRYCONT->(dbEval({|| nCont++}))
	QRYCONT->(dbGoTop())

	oReport:SetMeter(nCont)

	While !oReport:Cancel() .And. QRYCONT->(!EOF())

		oReport:IncMeter()

		If oReport:Cancel()
			Exit
		EndIf

		if QRYCONT->U00_FAQUIS == "I"
			cFormaArquis	:= "Imediato"
		elseIf QRYCONT->U00_FAQUIS == "P"
			cFormaArquis	:= "Preventivo"
		endIf

		nDiasUtiliz	:= DateDiffDay( StoD(QRYCONT->U00_DTATIV), StoD(QRYCONT->DATA_CADASTRO) )

		oContrato:Cell("U00_FAQUIS"):SetValue(cFormaArquis)
		oContrato:Cell("U00_CODIGO"):SetValue(QRYCONT->U00_CODIGO)
		oContrato:Cell("U00_NOMCLI"):SetValue(AllTrim(QRYCONT->U00_NOMCLI))
		oContrato:Cell("U00_VALOR"):SetValue(QRYCONT->U00_VALOR)
		oContrato:Cell("U00_DTATIV"):SetValue(StoD(QRYCONT->U00_DTATIV))
		oContrato:Cell("U04_DATA"):SetValue(StoD(QRYCONT->DATA_CADASTRO))
		oContrato:Cell("DIASUTIL"):SetValue( cValToChar( nDiasUtiliz ) )

		oContrato:PrintLine()

		nInd++
		nTotal	+=	QRYCONT->U00_VALOR

		oReport:SkipLine()	//Pula uma linha

		nQtdGeral	+= nInd
		nInd		:= 0

		QRYCONT->(dbSkip())
	EndDo

	oTotalGer:Init()
	oTotalGer:Cell("nQtdGeral"):SetValue("Qtd dos Contratos: " + cValToChar(nQtdGeral))
	oTotalGer:Cell("nTotalGer"):SetValue("Total dos Contrato: R$ " + Transform(nTotal,"@E 999,999,999.99"))

	oTotalGer:PrintLine()
	oTotalGer:SetTotalText(" ")
	oTotalGer:Finish()

	oTotalGer:SetPageBreak(.T.)

	oContrato:Finish()

	QRYCONT->(dbCloseArea())

Return(Nil)

/*/{Protheus.doc} AjustaSX1
Funcao para criar o grupo de perguntas
na SX1
@type function
@version 1.0 
@author g.sampaio
@since 30/01/2021
@param cPerg, character, grupo de perguntas
/*/
Static Function AjustaSX1(cPerg)

	Local aRegs		:= {}

	Default cPerg	:= ""

	// verifico se o nome do grupo de pergunta foi passado
	if !Empty(cPerg)

		// parametros SX1
		aAdd(aRegs,{cPerg,'01','Plano'          ,'','','mv_ch1','C', 99   	                    , 0, 0,'G','','mv_par01','','','','','','U05MRK'})
		aAdd(aRegs,{cPerg,'02','Data de '       ,'','','mv_ch2','D', TamSx3("U00_DTATIV")[1]    , 0, 0,'G','','mv_par02','','','','','',''})
		aAdd(aRegs,{cPerg,'03','Data ate'       ,'','','mv_ch3','D', TamSx3("U00_DTATIV")[1]    , 0, 0,'G','','mv_par03','','','','','',''})
		aAdd(aRegs,{cPerg,'04','Tipo Aquisição' ,'','','mv_ch4','N', 1                          , 0, 1,'N','','mv_par04','Ambos','Imediato','Preventivo','','',''})
		aAdd(aRegs,{cPerg,'05','Tipo Endereço'  ,'','','mv_ch5','N', 1                          , 0, 1,'N','','mv_par05','Ambos','Crematorio','Jazigo','Ossario','',''})

		// cria os dados da SX1
		U_CriaSX1( aRegs )

	endIf

Return(Nil)
