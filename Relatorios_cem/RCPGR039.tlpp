#include "topconn.ch"
#include "totvs.ch"
#include "tbiconn.ch"
#include "rwmake.ch"

#define CRLF CHR(13)+CHR(10)

/*/{Protheus.doc} RCPGR039
Relatório de PDD - Sintetico
@type function
@version 1.0
@author g.sampaio
@since 30/01/2021
/*/
User Function RCPGR039()
	Local oReport

	oReport:= ReportDef()
	oReport:PrintDialog()

Return(Nil)

/*/{Protheus.doc} ReportDef
Na seção de definição do relatório, função ReportDef(), 
devem ser criados os componentes de impressão, as seções 
e as células, os totalizadores e demais componentes que 
o usuário poderá personalizar no relatório.

@type function
@version 1.0 
@author g.sampaio
@since 30/01/2021
@return object, objeto de impressao
/*/
Static Function ReportDef()
	Local oReport       	:= Nil
	Local oContrato     	:= Nil
	Local oTotalContratos 	:= Nil
	Local cTitle    		:= "Relatório de Provisão de Devedores Duvidosos - Sintetico"

	Private cPerg		:= "RCPGR039"

	oReport	:= TReport():New("RCPGR039",cTitle,"RCPGR039",{|oReport| PrintReport(oReport,oContrato,oTotalContratos)},"Este relatório apresenta a relação de contratos para provsião de devedores duvidosos.")
	oReport:SetLandscape()			// Orientação paisagem
	oReport:HideParamPage()			// Inibe impressão da pagina de parametros
	oReport:SetUseGC( .F. ) 		// Desabilita o botão <Gestao Corporativa> do relatório

	AjustaSX1(cPerg) // cria as perguntas para gerar o relatorio
	Pergunte(oReport:GetParam(),.F.)

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	oContrato 	:= TRSection():New(oReport,"Contratos",{"TRBPDD"})//,{"Por Contrato","Por Cod. Cliente","Por Nome Cliente"}/*Ordens do Relatório*/,/*Campos do SX3*/,/*Campos do SIX*/)

	TRCell():New(oContrato, "CONTRATO"	    , "TRBPDD", "Contrato"          ,	PesqPict("U00","U00_CODIGO"	)   , TamSX3("U00_CODIGO")[1]+1)
	TRCell():New(oContrato, "TALONARIO"	    , "TRBPDD", "Talonario"	        ,	PesqPict("U00","U00_TALONA"	)   , TamSX3("U00_TALONA")[1]+5)
	TRCell():New(oContrato, "STATUS"	    , "TRBPDD", "Status"            ,	"@!"                            , 13 )
	TRCell():New(oContrato, "CESSIONARIO"	, "TRBPDD", "Cessionario"		,	PesqPict("U00","U00_NOMCLI"	)   , TamSX3("U00_NOMCLI")[1]+1)
	TRCell():New(oContrato, "ATIVACAO"		, "TRBPDD", "Emissão"           ,	PesqPict("U00","U00_DTATIV"	)   , TamSX3("U00_DTATIV")[1]+15)
	TRCell():New(oContrato, "QTDPAR"		, "TRBPDD", "Qtd.Parc."         ,	PesqPict("U00","U00_QTDPAR"	)   , TamSX3("U00_QTDPAR")[1]+3)
	TRCell():New(oContrato, "VALORORIGINAL"	, "TRBPDD", "Original(R$)"      ,	PesqPict("U00","U00_VALOR"	)   , TamSX3("U00_VALOR")[1]+3)
	TRCell():New(oContrato, "JUROS"		    , "TRBPDD", "Juros(%)"          ,	PesqPict("U00","U00_JUROS"	)   , TamSX3("U00_JUROS")[1]+3)
	TRCell():New(oContrato, "DIASEMATRASO"	, "TRBPDD", "Dias em Atraso"    ,	"@E 99999" 			 			, TamSX3("U00_VLRENT")[1]+3)
	TRCell():New(oContrato, "COMJUROS"	    , "TRBPDD", "Com Juros(R$)"     ,	PesqPict("SE1","E1_VALOR"	)   , TamSX3("E1_VALOR")[1]+3)
	TRCell():New(oContrato, "RECEBIDO"		, "TRBPDD", "Recebido(R$)"      ,	PesqPict("SE1","E1_VALOR"	)   , TamSX3("E1_VALOR")[1]+3)
	TRCell():New(oContrato, "EMABERTO"		, "TRBPDD", "Em Aberto(R$)"      ,	PesqPict("SE1","E1_VALOR"	)   , TamSX3("E1_VALOR")[1]+3)
	TRCell():New(oContrato, "PDD"		    , "TRBPDD", "PDD(R$)"			,	PesqPict("SE1","E1_VALOR"	)   , TamSX3("E1_VALOR")[1]+3)
	TRCell():New(oContrato, "UTILIZADO"		, "TRBPDD", "Utilizado"         ,	"@!"                            , 10 )
	TRCell():New(oContrato, "DTUTILIZACAO"	, "TRBPDD", "Dt.Utilização"     ,	PesqPict("UJV","UJV_DATA"	)   , TamSX3("UJV_DATA")[1]+15)

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	oTotalContratos := TRSection():New(oReport,"Total Geral",{}) //TRSection():New(oReport,"Total Geral",{},,,,,,,,,,,.T.,,,,,1)
	oTotalContratos:SetHeaderPage(.F.) //Define que imprime cabeçalho das células no topo da página. (Parâmetro) Se verdadeiro, aponta que imprime o cabeçalho no topo da página
	oTotalContratos:SetHeaderSection(.T.) //Define que imprime cabeçalho das células na quebra de seção.(Parâmetro) Se verdadeiro, aponta que imprime cabeçalho na quebra da seção
	oTotalContratos:SetTotalInLine(.T.) //Define que a impressão dos totalizadores será em linha. (Parâmetro) Se verdadeiro, imprime os totalizadores em linha

	TRCell():New(oTotalContratos,"nTotalAberto", , " ", "@!", 100)
	TRCell():New(oTotalContratos,"nTotalPDD", , " ", "@!", 200)

Return(oReport)

/*/{Protheus.doc} PrintReport
Funcao para impressao do relatorio
@type function
@version 1.0
@author g.sampaio
@since 30/01/2021
@param oReport, object, objeto de impressao
@param oContrato, object, objeto do contrato
@param oDetalhe, object, objeto do detalhe
@param oTotalContratos, object, objeto de total
/*/
Static Function PrintReport(oReport, oContrato, oTotalContratos)

	Local cQuery            As Character
	Local cProdutos         As Character
	Local cContratoDe       As Character
	Local cContratoAte      As Character
	Local cStatus           As Character
	Local cUtilizado        As Character
	Local dDataDe           As Date
	Local dDataAte          As Date
	Local dDataUtilizacao   As Date
	Local lContinua			As Logical
	Local nVP               As Numeric
	Local nVF               As Numeric
	Local nTaxa             As Numeric
	Local nParc             As Numeric
	Local nTotalAberto    	As Numeric
	Local nTotalPDD         As Numeric
	Local nCont             As Numeric
	Local nUtilizado		As Numeric
	Local nDiasEmAtraso 	As Numeric
	Local nValorPDD			As Numeric

	// atribuo valor para as variaveis
	cQuery 			:= "" // Query de busca
	cProdutos      	:= ""
	cContratoDe	    := ""
	cContratoAte    := ""
	cStatus         := ""
	cUtilizado      := ""
	dDataDe			:= StoD("")
	dDataAte		:= StoD("")
	dDataUtilizacao := StoD("")
	lContinua		:= .T.
	nVP		        := 0
	nVF		        := 0
	nTaxa			:= 0
	nParc			:= 0
	nTotalAberto	:= 0
	nTotalPDD		:= 0
	nCont           := 0
	nDiasEmAtraso	:= 0
	nValorPDD		:= 0

	// trata para os parametros
	dDataDe         := MV_PAR01
	dDataAte        := MV_PAR02
	cProdutos       := MV_PAR03
	cContratoDe     := MV_PAR04
	cContratoAte    := MV_PAR05
	nUtilizado		:= MV_PAR06	// 1=Ambos;2=Sim;3=Não

	oContrato:Init()

	If Select("TRBPDD") > 0
		TRBPDD->(DbCloseArea())
	Endif

	cQuery := " SELECT U00.U00_CODIGO CONTRATOCEM, "
	cQuery += "        U00.U00_TALONA TALONARIO, "
	cQuery += "        U00.U00_STATUS STATUS, "
	cQuery += "        U00.U00_NOMCLI CESSIONARIO, "
	cQuery += "        U00.U00_DESCPL DESCRIPRODUTO, "
	cQuery += "        U00.U00_DTATIV ATIVACAO, "
	cQuery += "        U00.U00_QTDPAR QTDPAR, "
	cQuery += "        U00.U00_VALOR VALORORIGINAL, "
	cQuery += "        U00.U00_JUROS JUROS,	 "
	cQuery += "        SUM(PDD.VALOR_PDD) VALORPDD, "
	cQuery += "   (SELECT SUM(SE1.E1_VALOR + SE1.E1_ACRESC) "
	cQuery += "    FROM " + RetSQLName("SE1") + " SE1 "
	cQuery += "    WHERE SE1.D_E_L_E_T_ = ' ' "
	cQuery += "      AND SE1.E1_XCONTRA = U00.U00_CODIGO "
	cQuery += "      AND SE1.E1_NUMLIQ = ' ' ) COMJUROS, "
	cQuery += "        ISNULL( "
	cQuery += "                 (SELECT SUM(SE5.E5_VALOR) TOTAL_PAGO "
	cQuery += "                  FROM " + RetSQLName("SE5") + " SE5 "
	cQuery += "                  INNER JOIN " + RetSQLName("SE1") + " SE1 ON SE1.D_E_L_E_T_ = ' ' "
	cQuery += "                  AND SE1.E1_FILIAL = '" + xFilial("SE1") + "' "
	cQuery += "                  AND SE1.E1_PREFIXO = SE5.E5_PREFIXO "
	cQuery += "                  AND SE1.E1_NUM = SE5.E5_NUMERO "
	cQuery += "                  AND SE1.E1_PARCELA = SE5.E5_PARCELA "
	cQuery += "                  AND SE1.E1_TIPO = SE5.E5_TIPO "
	cQuery += "                  AND SE1.E1_XCONTRA = U00.U00_CODIGO "
	cQuery += "                  WHERE SE5.D_E_L_E_T_ = ' ' "
	cQuery += "                    AND SE5.E5_FILIAL = '" + xFilial("SE5") + "' "
	cQuery += "                    AND SE5.E5_RECPAG = 'R' "
	cQuery += "                    AND SE5.E5_TIPODOC <> 'ES' "
	cQuery += "                    AND SE5.E5_SITUACA <> 'C' "
	cQuery += "                    AND ((SE5.E5_TIPODOC = 'VL' "
	cQuery += "                          AND SE5.E5_MOTBX = 'NOR' "
	cQuery += "                          AND SE5.E5_ORIGEM <> 'LOJXREC') "
	cQuery += "                         OR (SE5.E5_TIPODOC = 'BA' "
	cQuery += "                             AND SE5.E5_MOTBX <> 'LIQ')) "
	cQuery += "                    AND SE5.E5_TIPODOC NOT IN ('MT', 'JR', 'ES', 'M2', 'J2', 'IB', 'AP', 'BL', 'C2', 'CB', 'CM', 'D2', 'DC', 'DV', 'NCC', 'SG', 'TC') ),0) RECEBIDO,	 "
	cQuery += "   (SELECT MIN(SE1.E1_VENCREA) "
	cQuery += "    FROM " + RetSQLName("SE1") + " SE1 "
	cQuery += "    WHERE SE1.D_E_L_E_T_ = ' ' "
	cQuery += "      AND SE1.E1_XCONTRA = U00.U00_CODIGO "
	cQuery += "      AND SE1.E1_SALDO > 0 "
	cQuery += "      AND SE1.E1_VENCREA < '"+Dtos(dDatabase)+"') PARCEMATRASO, "
	cQuery += "   (SELECT SUM(SE1.E1_SALDO + SE1.E1_SDACRES - E1_SDDECRE ) " //SE1->E1_SDACRES - SE1->E1_SDDECRE
	cQuery += "    FROM " + RetSQLName("SE1") + " SE1 "
	cQuery += "    WHERE SE1.D_E_L_E_T_ = ' ' "
	cQuery += "      AND SE1.E1_XCONTRA = U00.U00_CODIGO "
	cQuery += "      AND SE1.E1_SALDO > 0 "
	cQuery += "      AND SE1.E1_VENCREA < '"+Dtos(dDatabase)+"') VALORATRASO, "
	cQuery += "   (SELECT SUM(SE1.E1_SALDO + SE1.E1_SDACRES - E1_SDDECRE ) " //SE1->E1_SDACRES - SE1->E1_SDDECRE
	cQuery += "    FROM " + RetSQLName("SE1") + " SE1 "
	cQuery += "    WHERE SE1.D_E_L_E_T_ = ' ' "
	cQuery += "      AND SE1.E1_XCONTRA = U00.U00_CODIGO "
	cQuery += "      AND SE1.E1_SALDO > 0 "
	cQuery += "      AND SE1.E1_VENCREA > '"+Dtos(dDatabase)+"') VALOREMABERTO, "
	cQuery += "        ISNULL( "
	cQuery += "                 (SELECT MAX(DATAUTILIZACAO) "
	cQuery += "                  FROM "
	cQuery += "                    (SELECT U04.U04_DATA DATAUTILIZACAO "
	cQuery += "                     FROM " + RetSQLName("U04") + " U04 "
	cQuery += "                     WHERE U04.D_E_L_E_T_ = ' ' "
	cQuery += "                       AND U04.U04_FILIAL = '" + xFilial("U04") + "' "
	cQuery += "                       AND U04.U04_CODIGO = U00.U00_CODIGO "
	cQuery += "                     UNION ALL SELECT U30.U30_DTUTIL DATAUTILIZACAO "
	cQuery += "                     FROM " + RetSQLName("U30") + " U30 "
	cQuery += "                     WHERE U30.D_E_L_E_T_ = ' ' "
	cQuery += "                       AND U30.U30_FILIAL = '" + xFilial("U30") + "' "
	cQuery += "                       AND U30.U30_CODIGO = U00.U00_CODIGO ) ENDERECAMENTO),'') DTUTILIZACAO "
	cQuery += " FROM " + RetSQLName("U00") + " U00 "
	cQuery += " INNER JOIN "
	cQuery += "   (SELECT SE1.E1_XCONTRA CONTRATO, "
	cQuery += "           SE1.E1_SALDO SALDO, "
	cQuery += "           SE1.E1_MOEDA MOEDA, "
	cQuery += "           SE1.E1_PREFIXO PREFIXO, "
	cQuery += "           SE1.E1_NUM NUMERO, "
	cQuery += "           SE1.E1_PARCELA PARCELA, "
	cQuery += "           SE1.E1_TIPO TIPO, "
	cQuery += "           SE1.E1_CLIENTE CLIENTE, "
	cQuery += "           SE1.E1_LOJA LOJA, "
	cQuery += "           SE1.E1_VENCREA VENCIMENTO, "
	cQuery += "           SE1.E1_EMIS1 EMISSAO, "
	cQuery += "           SE1.E1_VALOR + SE1.E1_ACRESC COMJUROS, "
	cQuery += "           SUM(FIA.FIA_VALOR) VALOR_PDD "
	cQuery += "    FROM " + RetSQLName("SE1") + " SE1 "
	cQuery += "    LEFT JOIN " + RetSQLName("FIA") + " FIA ON FIA_FILIAL = '" + xFilial("FIA") + "' "
	cQuery += "    AND FIA.FIA_CLIENT = SE1.E1_CLIENTE "
	cQuery += "    AND FIA.FIA_LOJA = SE1.E1_LOJA "
	cQuery += "    AND FIA.FIA_PREFIX = SE1.E1_PREFIXO "
	cQuery += "    AND FIA.FIA_NUM = SE1.E1_NUM "
	cQuery += "    AND FIA.FIA_PARCEL = SE1.E1_PARCELA "
	cQuery += "    AND FIA.FIA_TIPO = SE1.E1_TIPO "
	cQuery += "    WHERE SE1.E1_FILIAL = '" + xFilial("SE1") + "' "
	cQuery += "      AND SE1.D_E_L_E_T_ = ' ' "
	cQuery += " 	 AND SE1.E1_SALDO > 0
	cQuery += " 	 AND SE1.E1_XCONTRA <> ' '
	cQuery += "    GROUP BY SE1.E1_XCONTRA, "
	cQuery += "             SE1.E1_SALDO, "
	cQuery += "             SE1.E1_MOEDA, "
	cQuery += "             SE1.E1_PREFIXO, "
	cQuery += "             SE1.E1_NUM, "
	cQuery += "             SE1.E1_PARCELA, "
	cQuery += "             SE1.E1_TIPO, "
	cQuery += "             SE1.E1_CLIENTE, "
	cQuery += "             SE1.E1_LOJA, "
	cQuery += "             SE1.E1_VENCREA, "
	cQuery += "             SE1.E1_EMIS1, (SE1.E1_VALOR + SE1.E1_ACRESC)) AS PDD ON PDD.CONTRATO = U00.U00_CODIGO "
	cQuery += " WHERE U00.D_E_L_E_T_ = ' ' "
	cQuery += "   AND U00.U00_STATUS IN ('A', "
	cQuery += "                          'S') "

	if !Empty(dDataAte)
		cQuery += " AND U00.U00_DTATIV >= '" + DtoS(dDataDe) + "' AND U00.U00_DTATIV <= '" + DtoS(dDataAte) + "' "
	endIf

	if !Empty(cContratoAte)
		cQuery += " AND U00.U00_CODIGO >= '" + cContratoDe + "' AND U00.U00_CODIGO <= '" + cContratoAte + "' "
	endIf

	if !Empty(cProdutos)
		cQuery += " AND U00.U00_PLANO IN " + FormatIn( AllTrim(cProdutos),";" ) + " "
	endIf

	cQuery += " GROUP BY U00.U00_CODIGO, "
	cQuery += "          U00.U00_TALONA, "
	cQuery += "          U00.U00_STATUS, "
	cQuery += "          U00.U00_NOMCLI, "
	cQuery += "          U00.U00_DESCPL, "
	cQuery += "          U00.U00_DTATIV, "
	cQuery += "          U00.U00_QTDPAR, "
	cQuery += "          U00.U00_VALOR, "
	cQuery += "          U00.U00_JUROS "

	cQuery := ChangeQuery(cQuery)

	TcQuery cQuery New Alias "TRBPDD"

	TRBPDD->(dbEval({|| nCont++}))
	TRBPDD->(dbGoTop())

	oReport:SetMeter(nCont)

	While !oReport:Cancel() .And. TRBPDD->(!EOF())

		// reinicio o conteudo da variavel
		lContinua	  := .T.
		nDiasEmAtraso := 0

		oReport:IncMeter()

		If oReport:Cancel()
			Exit
		EndIf

		if nUtilizado == 2 // sim - utilizado
			if Empty(TRBPDD->DTUTILIZACAO)
				lContinua := .F.
			endIf
		elseIf nUtilizado == 3 // nao - não utilizado
			if !Empty(TRBPDD->DTUTILIZACAO)
				lContinua := .F.
			endIf
		endIf

		if lContinua

			nDiasEmAtraso := 0
			if !empty(TRBPDD->PARCEMATRASO)
				nDiasEmAtraso := DateDiffDay(Stod(TRBPDD->PARCEMATRASO), dDatabase)
			endIf

			// pego o status do contrato
			if TRBPDD->STATUS == "A"
				cStatus := "ATIVO"
			elseIf TRBPDD->STATUS == "S"
				cStatus := "SUSPENSO"
			endIf

			// verifico se o contrato esta ativo
			if !Empty(TRBPDD->DTUTILIZACAO)
				cUtilizado := "SIM"
			else
				cUtilizado := "NÃO"
			endIf

			if nDiasEmAtraso == 0	
				nValorPDD := TRBPDD->VALOREMABERTO * 0.01 // multiplico por 1%
			else
				nValorPDD := TRBPDD->VALORPDD + (TRBPDD->VALOREMABERTO * 0.01) // somo o PDD + o valor em aberto se houver
			endIf

			oContrato:Cell("CONTRATO"):SetValue(TRBPDD->CONTRATOCEM)
			oContrato:Cell("TALONARIO"):SetValue(TRBPDD->TALONARIO)
			oContrato:Cell("STATUS"):SetValue(AllTrim(cStatus))
			oContrato:Cell("CESSIONARIO"):SetValue(TRBPDD->CESSIONARIO)
			oContrato:Cell("ATIVACAO"):SetValue(StoD(TRBPDD->ATIVACAO))
			oContrato:Cell("QTDPAR"):SetValue( cValToChar( TRBPDD->QTDPAR ) )
			oContrato:Cell("VALORORIGINAL"):SetValue( TRBPDD->VALORORIGINAL )
			oContrato:Cell("JUROS"):SetValue( TRBPDD->JUROS )
			oContrato:Cell("DIASEMATRASO"):SetValue( nDiasEmAtraso )
			oContrato:Cell("COMJUROS"):SetValue( TRBPDD->COMJUROS )
			oContrato:Cell("RECEBIDO"):SetValue( TRBPDD->RECEBIDO )			
			oContrato:Cell("EMABERTO"):SetValue( TRBPDD->VALORATRASO + TRBPDD->VALOREMABERTO )	
			oContrato:Cell("PDD"):SetValue( nValorPDD )
			oContrato:Cell("UTILIZADO"):SetValue( cUtilizado )
			oContrato:Cell("DTUTILIZACAO"):SetValue( Stod(TRBPDD->DTUTILIZACAO) )

			oContrato:PrintLine()

			nTotalAberto	+= TRBPDD->COMJUROS-TRBPDD->RECEBIDO
			nTotalPDD       += nValorPDD

			oReport:SkipLine()	//Pula uma linha

		endIf

		TRBPDD->(dbSkip())
	EndDo

	oTotalContratos:Init()
	oTotalContratos:Cell("nTotalAberto"):SetValue( "Valor Total em Aberto: R$ " +  Transform(nTotalAberto,PesqPict("SE1","E1_VALOR") ) )
	oTotalContratos:Cell("nTotalPDD"):SetValue( "Valor Total PDD: R$ " + Transform(nTotalPDD,PesqPict("SE1","E1_VALOR") ) )

	oTotalContratos:PrintLine()
	oTotalContratos:SetTotalText(" ")
	oTotalContratos:Finish()

	oTotalContratos:SetPageBreak(.T.)

	oContrato:Finish()

	TRBPDD->(dbCloseArea())

Return(Nil)

/*/{Protheus.doc} AjustaSX1
Funcao para criar o grupo de perguntas
na SX1
@type function
@version 1.0 
@author g.sampaio
@since 30/01/2021
@param cPerg, character, grupo de perguntas
/*/
Static Function AjustaSX1(cPerg)

	Local aRegs		:= {}

	Default cPerg	:= ""

	// verifico se o nome do grupo de pergunta foi passado
	if !Empty(cPerg)

		// parametros SX1
		aAdd(aRegs,{cPerg,'01','Data de '       		,'','','mv_ch1','D', TamSx3("U00_DTATIV")[1]    , 0, 0,'G','','mv_par01','','','','','',''})
		aAdd(aRegs,{cPerg,'02','Data ate'       		,'','','mv_ch2','D', TamSx3("U00_DTATIV")[1]    , 0, 0,'G','','mv_par02','','','','','',''})
		aAdd(aRegs,{cPerg,'03','Produtos'       		,'','','mv_ch3','C', 99   	                    , 0, 0,'G','','mv_par03','','','','','','U05MRK'})
		aAdd(aRegs,{cPerg,'04','Contrato de'   	 		,'','','mv_ch4','C', TamSx3("U00_CODIGO")[1]    , 0, 1,'G','','mv_par04','','','','','',''})
		aAdd(aRegs,{cPerg,'05','Contrato ate'   		,'','','mv_ch5','C', TamSx3("U00_CODIGO")[1]    , 0, 1,'G','','mv_par05','','','','','',''})
		aAdd(aRegs,{cPerg,'06','Utilizado?'   			,'','','mv_ch6','N', 1    						, 0, 1,'N','','mv_par06','1=Ambos','2=Sim','3=Não','','',''})

		// cria os dados da SX1
		U_CriaSX1( aRegs )

	endIf

Return(Nil)
